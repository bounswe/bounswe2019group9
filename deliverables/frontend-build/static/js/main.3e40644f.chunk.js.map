{"version":3,"sources":["Images/app_icon_transparent.png","Store/index.jsx","Libs/Toaster/toaster.js","Api/base.js","Constants/index.js","Api/User/index.js","Layouts/CenterView/index.jsx","Components/FormIcon.jsx","Routes/Guest/LogIn/index.jsx","Routes/Guest/Register/index.jsx","Routes/Guest/Forgot/index.jsx","Routes/Guest/index.jsx","Api/Content/index.js","Routes/User/LanguageSelect/index.jsx","Api/Grade/index.js","Helpers/grades.js","Helpers/exercises.js","Helpers/languages.js","Helpers/colors.js","Routes/User/Language/LanguageSidebar/index.jsx","Routes/User/Language/ProfExam/index.jsx","Api/Suggest/index.js","Routes/User/Language/Suggest/index.jsx","Api/Writing/index.js","Routes/User/Language/Writing/index.jsx","Routes/User/Language/Main/index.jsx","Routes/User/Language/Exercises/ExerciseList/index.jsx","Routes/User/Language/Exercises/index.jsx","Routes/User/Language/Exercises/ExerciseSearch/Search.jsx","Routes/User/Language/Exercises/ExerciseSearch/index.jsx","Routes/User/Language/index.jsx","Routes/User/Dashboard/index.jsx","Routes/User/Navbar/index.jsx","Api/Greeting/index.js","Routes/User/Sample/index.jsx","Routes/User/UserView/InvitationButton.jsx","Api/Invitation/index.js","Helpers/delay.js","Helpers/avatar.js","Routes/User/UserView/index.jsx","Routes/User/UserProfile/CommentInput.jsx","Api/Comment/index.js","Routes/User/UserProfile/CommentsView.jsx","Routes/User/UserProfile/RateUser.jsx","Api/Rate/index.js","Routes/User/UserProfile/index.jsx","Routes/User/Users/Search.jsx","Routes/User/Users/index.jsx","Routes/User/Chats/Chat.jsx","Api/Chat/index.js","Routes/User/Chats/PendingPage.jsx","Routes/User/Chats/index.jsx","Routes/User/Essays/EssaysSider.jsx","Routes/User/Essays/ReccomItem.jsx","Api/Request/index.js","Routes/User/Essays/RequestReview.jsx","Api/Recommendation/index.js","Routes/User/Annotation/AnnotationData/AnnotationData.js","Routes/User/Annotation/AnnotationData/ImageAnnotationData.js","Routes/User/Annotation/AnnotationData/TextAnnotationData.js","Routes/User/Annotation/AnnotationData/AnnotationDataFactory.js","Routes/User/Annotation/ImageAnnotation/ImageAnnotation.jsx","Routes/User/Annotation/ImageAnnotation/ImageAnnotationContainer.jsx","Routes/User/Annotation/TextAnnotation/TextAnnotation.jsx","Routes/User/Annotation/TextAnnotation/TextAnnotationContainer.jsx","Routes/User/Annotation/AnnotationModal.jsx","Routes/User/Annotation/index.jsx","Api/Annotation/index.js","Routes/User/Essays/EssayView.jsx","Api/Essay/index.js","Routes/User/Essays/index.jsx","Routes/User/Essays/EssayReviews.jsx","Routes/User/index.jsx","Routes/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","subscriptions","Set","store","localStorage","getItem","JSON","parse","token","userId","PropTypes","shape","string","isRequired","oneOfType","number","updateStore","nextStore","axios","defaults","headers","Authorization","setItem","stringify","forEach","subscription","connect","ChildComponent","props","React","useState","currentStore","setCurrentStore","useEffect","handleStoreChange","add","delete","unsubscribeStore","initialized","toast","configure","hideProgressBar","newestOnTop","position","POSITION","TOP_CENTER","autoClose","isToastsEnabled","config","hasOwnProperty","toastsEnabled","errorHandler","error","errorMessage","console","log","response","status","data","request","message","done","uploadToast","id","Promise","reject","interceptors","use","prevUploadProgress","onUploadProgress","p","progress","loaded","total","info","update","requestHandler","explanation","url","successMessage","success","responseHandler","getRequest","apiUrl","params","extras","get","postRequest","post","getProfileInfoByUserId","login","register","styles","layout","height","alignItems","justifyContent","paddingBottom","CenterView","children","style","formIcon","opacity","FormIcon","LogIn","state","loading","handleSubmit","e","preventDefault","form","validateFields","err","values","setState","then","catch","handleChange","target","value","name","getFieldDecorator","this","title","loginCard","type","showIcon","onSubmit","Item","label","rules","required","placeholder","prefix","Password","loginLinks","to","loginButton","htmlType","PureComponent","maxWidth","width","minWidth","display","marginBottom","Form","create","Register","firstName","lastName","email","password","confirmDirty","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","confirmPassword","handleConfirmBlur","validatePassword","rule","callback","force","validateConfirmPassword","getFieldValue","registerCard","hasFeedback","validator","onBlur","registerLinks","registerButton","Forgot","setTimeout","Math","random","forgotCard","forgotLinks","forgotButton","GuestRoutes","exact","path","component","searchExercises","LanguageSelect","languages","card","map","language","key","addGrade","getGrade","grades","num_grade","str_grade","numGradeToGrade","numToGradeMap","reduce","acc","grade","numGradeToStrGrade","calculateGrade","correct","percent","exerciseTypes","typeId","route","icon","typeIdToType","typeMap","exerciseType","routeToType","exerciseTypeType","exerciseContentType","languageId","imageUrl","soundUrl","questionBody","optionA","optionB","optionC","optionD","correctAnswer","tags","arrayOf","exerciseId","tagText","nameToLanguage","lanToIdMap","languageName","idToLanguage","lanIdToNameMap","languageType","appColorDark","routes","header","margin","useParams","pathname","useLocation","LanguagesHelper","setGrade","currentRoute","split","slice","filter","x","join","GradesHelper","undefined","color","selectedKeys","mode","SubMenu","ExercisesHelper","questions","answers","currentQuestion","currentGrade","lastAnswered","answerQuestion","optionIndex","question","nextQuestion","increment","match","length","questionIndex","history","push","max","min","options","answer","subTitle","paragraph","actions","onClick","disabled","Group","option","Button","addSuggestion","Suggest","expand","choice1","choice2","choice3","choice4","count","i","addonBefore","className","gutter","getFields","textAlign","Component","addWriting","uploadEssayPhoto","beforeUpload","file","isJpgOrPng","isLt2M","size","Writing","submit","photo","photoUrl","authorId","assignmentId","sourceType","source","body","handleUploadChange","img","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","base64Data","chosenAssignment","res","renderUpload","uploadButton","listType","showUploadList","action","onChange","src","alt","subject","text","submitted","assignments","event","overflow","val","Option","TextArea","rows","withRouter","setLoading","propTypes","bool","exercises","defaultProps","backgroundColor","incorrectAnswer","sound","ExerciseList","currentExerciseIndex","setCurrentExerciseIndex","setAnswers","useHistory","currentExercise","currentAnswer","audioRef","createRef","nextExercise","correctAnswers","sum","incorrectAnswers","toLowerCase","current","pause","load","data-testid","controls","ref","nextAnswers","answerExercise","exerciseTypeRoute","setExercises","sort","a","b","Select","getFieldsError","getFieldError","isFieldTouched","initialValue","padding","innerCard","maxHeight","ExerciseSearch","accordion","Panel","column","pathToLabel","container","content","background","breadcrumb","LanguageRoutes","paths","Sider","theme","collapsible","index","Content","Main","Exercises","ProfExam","Dashboard","Title","level","logOut","logo","float","logoTitle","logoImage","menu","lineHeight","ColorsHelper","profileSubmenu","user","setUser","getUserById","AppLogo","getGreeting","Sample","greeting","InvitationButton","sourceId","receiverId","msgs","isDisabled","setDisabled","isLoading","setMessage","userId1","userId2","pendingRequestFromTwoToOne","pendingRequestFromOneToTwo","startedConversation","answerToInvitation","approved","delay","ms","resolve","avatarUrl","UserView","progressLevels","isButtonPresent","rate","setRate","new_rate","round","languagesTuple","lang","allowHalf","tuple","toUser","setIsLoading","setContent","Search","onSearch","enterButton","onPressEnter","ofUser","comments","setComments","getComments","o","author","href","comment","sourceFirstName","sourceLastName","avatar","datetime","moment","createdAt","fromNow","itemLayout","dataSource","renderItem","item","otherUserId","setValue","senderId","cur","rating","updateRating","paramUserId","profile","setProfile","updateProfile","active","users","setUsers","bodyStyle","setMsgs","handleChatResponse","msg","dateString","Events","scrollEvent","remove","scroller","scrollTo","duration","smooth","containerId","inputRef","input","setInput","inputDisabled","setInputDisabled","lockable","toBottomHeight","Footer","clear","autofocus","rightButtons","pendingUsers","setPendingUsers","Array","isArray","fontSize","Layout","ViewPendingsButton","paddingTop","paddingRight","paddingLeft","focusUser","setFocusUser","contactedUsers","setContactedUsers","getConversationsOf","collapsedWidth","Header","sider","EssaysSider","essays","es","progressLevel","essayId","sent","setSent","isloading","bordered","defaultValue","visible","onOk","onCancel","gradeLangs","setGradeLangs","recs","setRecs","Object","entries","constructor","r","AnnotationData","userName","userEmail","motivation","targetUrl","targetType","setIdFromLink","idLink","exec","setModified","modifiedAt","Date","setTarget","setMotivation","setAnnotationId","Error","creator","created","toISOString","modified","format","clonedData","motivationTypeToMotivationObject","motivationObject","motivationTypes","motivationTypesByValue","ImageAnnotationData","displayX","displayY","originalX","originalY","originalWidth","originalHeight","displayWidth","displayHeight","ext","substr","lastIndexOf","startsWith","selector","conformsTo","cloned","realWidth","naturalWidth","realHeight","naturalHeight","TextAnnotationData","start","end","AnnotationDataFactory","fromDataModel","annotation","annotationData","y","parseInt","ImageAnnotation","isOwner","onSaveAnnotation","setEditingAnnotation","location","setLocation","isDragging","setIsDragging","displayTitle","displayBody","dx","dy","events","onDragStart","onDragEnd","nextProps","abs","nextAnnotation","clone","fill","fillOpacity","editMode","align","orientation","bgPadding","wrap","titleColor","labelColor","lineType","image","annotationContainer","top","left","zIndex","withContentRect","measureRef","contentRect","annotations","dispatch","bounds","imageReady","setImageReady","imageRef","handleImageLoad","removeEventListener","clientX","clientY","svg","onMouseUp","stopPropagation","border","TextAnnotationContainer","handleRemoveAnnotation","nextAnnotations","getSpan","tag","onRemoveAnnotation","useReducer","prevState","resetFields","finally","handleCancel","footer","onConfirm","autoSize","minRows","maxRows","essay","editingAnnotation","targetId","initialAnnotations","handleSaveAnnotation","isNew","dataModel","toDataModel","updateAnnotation","annotationId","ChosenAnnotationContainer","ImageAnnotationContainer","EssayView","setEssay","getEssayById","flexDirection","alignContent","setEssays","focusEssayId","setFocusEssayId","isModalVisible","setModalVisible","focusLangId","setFocusLangId","updateEssays","menu_essays","ess","assignment","RequestReview","getRequestsByUserId","username","UserRoutes","from","SamplePage","Users","UserProfile","Chats","Essays","EssayReviews","Language","User","Guest","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e40644f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app_icon_transparent.a3964ba4.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst subscriptions = new Set();\n\nconst localStorageKey = 'bounswe_store';\n\nlet store = localStorage.getItem(localStorageKey);\nstore = store ? JSON.parse(store) : {\n  token: '',\n  userId: '',\n};\n\nexport const storeType = PropTypes.shape({\n  token: PropTypes.string.isRequired,\n  userId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n}).isRequired;\n\nconst subscribeStore = (subscription) => {\n  subscriptions.add(subscription);\n};\n\nconst unsubscribeStore = (subscription) => {\n  subscriptions.delete(subscription);\n};\n\nexport const updateStore = (nextStore) => {\n  store = {\n    ...store,\n    ...nextStore\n  };\n  axios.defaults.headers.Authorization = store.token;\n\n  localStorage.setItem(localStorageKey, JSON.stringify(store));\n  subscriptions.forEach((subscription) => subscription(store));\n};\n\nexport const connect = (ChildComponent) => {\n  return function StoreInjector(props) {\n    const [currentStore, setCurrentStore] = React.useState(store);\n\n    React.useEffect(() => {\n      function handleStoreChange(nextStore) {\n        setCurrentStore(nextStore);\n      }\n      subscribeStore(handleStoreChange);\n\n      return function cleanup() {\n        unsubscribeStore(handleStoreChange);\n      };\n    }, []);\n\n    return <ChildComponent store={currentStore} {...props} updateStore={updateStore} />;\n  }\n};\n\n// export default store;\n","import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport axios from 'axios';\nimport {updateStore} from '../../Store';\n\nlet initialized = false;\n\nif (!initialized) {\n  initialized = true;\n\n  toast.configure({\n    hideProgressBar: true,\n    newestOnTop: true,\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 3000\n  });\n  // bind toasts to axios defaults\n  const isToastsEnabled = (config = {}) =>\n    !(config.hasOwnProperty('toastsEnabled') && !config.toastsEnabled);\n  axios.defaults.isToastsEnabled = true;\n  const requestHandler = (config) => {\n    if (isToastsEnabled(config)) {\n      config.uploadToast = {id: null};\n      if (config.headers[\"Content-Type\"] === 'multipart/form-data') {\n        const prevUploadProgress = config.onUploadProgress;\n        config.onUploadProgress = (p) => {\n          const progress = p.loaded / (p.total + 1);\n          if (config.uploadToast.id === null) {\n            config.uploadToast.id = toast.info('Upload in progress', {progress, hideProgressBar: false});\n          } else {\n            toast.update(config.uploadToast.id, {progress});\n          }\n          return prevUploadProgress && prevUploadProgress(p);\n        };\n      }\n    }\n    return config;\n  };\n  const errorHandler = (error) => {\n    let errorMessage = null;\n    console.log('error interceptor', error, error.response);\n    if (error.response) {\n      if (error.response.status === 401 || error.response.status === 403) {\n        errorMessage = \"Unauthorized, please login again. Your token may have been expired.\";\n        updateStore({\n          token: '', userId: ''\n        });\n      } else if (typeof error.response.data === 'string') {\n        errorMessage = error.response.data;\n      } else {\n        errorMessage = 'Oops something went wrong!';\n      }\n    } else if (error.request) {\n      errorMessage = 'Oops something went wrong in the server!';\n    } else {\n      console.log('Error building axios request', error.message);\n    }\n    if (isToastsEnabled(error.config)) {\n      // toast update/done checks performs noop/returns null if toastId is invalid, so no need to null check toastId\n      toast.done(error.config.uploadToast.id);\n\n      if (errorMessage) {\n        toast.error(errorMessage);\n      }\n    }\n    return Promise.reject({...error, message: errorMessage || error.message});\n  };\n  const responseHandler = (response) => {\n    if (isToastsEnabled(response.config)) {\n      toast.done(response.config.uploadToast.id);\n      const {explanation, status} = response.data;\n      if (status === 401 || status === 403) {\n        toast.error(\"Unauthorized, please login again. Your token may have been expired.\");\n        updateStore({\n          token: '', userId: ''\n        });\n      } else if (status && (status < 200 || status >= 300)) {\n        const errorMessage = explanation || 'Oops something went wrong!';\n        toast.error(errorMessage);\n        console.log(`Custom error on ${response.config.url} ${status} ${explanation}`, response.data);\n        return Promise.reject({ message: errorMessage });\n      } else {\n        let successMessage = null;\n        if (response.config.hasOwnProperty('successMessage') && response.config.successMessage) {\n          successMessage = response.config.successMessage;\n        } else if (explanation) {\n          successMessage = explanation;\n        }\n        if (successMessage) {\n          toast.success(successMessage);\n        }\n      }\n    }\n    return response;\n  };\n  axios.interceptors.request.use(\n    request => requestHandler(request)\n  );\n  axios.interceptors.response.use(\n    response => responseHandler(response),\n    error => errorHandler(error),\n  );\n}\n","import axios from 'axios';\n\nimport {API_URL} from '../Constants';\n\nexport const getRequest = (apiUrl, params = {}, extras = {}) =>\n  axios.get(`${API_URL}${apiUrl}`, {\n    ...extras,\n    params,\n  });\n\nexport const postRequest = (apiUrl, data = {}, extras = {}) =>\n  axios.post(`${API_URL}${apiUrl}`, data, {\n    ...extras,\n  });\n\nexport const postFormDataRequest = (apiUrl, data = {}, extras = {}) => {\n  const formData = new FormData();\n  Object.keys(data).forEach((key) => formData.append(key, data[key]));\n\n  return axios.post(`${API_URL}${apiUrl}`, formData, {\n    ...extras,\n  })\n};\n\nexport const putRequest = (apiUrl, data = {}, extras = {}) =>\n  axios.put(`${API_URL}${apiUrl}`, data, {\n    ...extras,\n  });\n\nexport const deleteRequest = (apiUrl, params = {}, extras = {}) =>\n  axios.delete(`${API_URL}${apiUrl}`, {\n    ...extras,\n    params,\n  });\n","export const API_URL = /**/ \"/api/\"; /*/ \"https://api.bounswe2019group9.tk/\"; /* */\n","import {getRequest, postRequest} from '../base';\n\n/**\n * @function getUserById\n * @param userId\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response:\n * {\n *  \"email\": \"string\",\n *  \"firstName\": \"string\",\n *  \"id\": 0,\n *  \"lastName\": \"string\",\n *  \"password\": \"string\"\n * }\n *\n */\nexport const getUserById = (userId, extras) => getRequest('users/get', { id: userId }, extras);\n\n/**\n * @function getProfileInfoByUserId\n * @param userId\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response:\n * {\n *  \"email\": \"string\",\n *  \"firstName\": \"string\",\n *  \"grades\": [\n *    0\n *  ],\n *  \"languages\": [\n *    \"string\"\n *  ],\n *  \"lastName\": \"string\",\n *  \"progressLevels\": [\n *    0\n *  ],\n *  \"userId\": 0\n * }\n *\n */\nexport const getProfileInfoByUserId = (userId, extras) => getRequest('users/profile', { id: userId }, extras);\n\n/**\n * @function login\n * @param data\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response:\n * {\n *  \"data\": {\n *    \"email\": \"string\",\n *    \"firstName\": \"string\",\n *    \"id\": 0,\n *    \"lastName\": \"string\",\n *    \"password\": \"string\"\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const login = (data, extras) => postRequest(`users/login`, data, extras);\n\n/**\n * @function register\n * @param data ({ email, firstName, lastName, password })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {\n *  \"data\": {\n *    \"email\": \"string\",\n *    \"firstName\": \"string\",\n *    \"id\": 0,\n *    \"lastName\": \"string\",\n *    \"password\": \"string\"\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const register = (data, extras) => postRequest(`users/register`, data, extras);\n\n/**\n * @function search\n * @param data ({ firstName, grade, languageId, lastName })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * [\n *  {\n *    \"email\": \"string\",\n *    \"firstName\": \"string\",\n *    \"grades\": [\n *      0\n *    ],\n *    \"languages\": [\n *      \"string\"\n *    ],\n *    \"lastName\": \"string\",\n *    \"progressLevels\": [\n *      0\n *    ],\n *    \"userId\": 0\n *  }\n * ]\n */\nexport const search = (data, extras) => postRequest('search/users', data, extras);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Layout } from 'antd';\n\nconst CenterView = ({ children }) => {\n  return (\n    <Layout style={styles.layout}>\n      { children }\n    </Layout>\n  )\n};\n\nCenterView.propTypes = {\n  children: PropTypes.node\n};\n\nconst styles = {\n  layout: {\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: '10%'\n  }\n};\n\nexport default CenterView;\n","import React from 'react';\nimport { Icon } from 'antd';\n\nconst FormIcon = ({ style, ...props }) => (\n  <Icon\n    { ...props }\n    style={\n      style ?\n        { ...styles.formIcon, ...style} :\n        styles.formIcon\n    }\n  />\n);\n\nFormIcon.propTypes = Icon.propTypes;\n\nconst styles = {\n  formIcon: {\n    opacity: '.25'\n  }\n};\n\nexport default FormIcon;\n","import React from \"react\";\nimport {Card, Form, Input, Button, Alert} from \"antd\";\n\nimport {updateStore} from '../../../Store';\nimport {Link} from \"react-router-dom\";\nimport {login} from '../../../Api/User';\nimport {CenterView} from '../../../Layouts';\nimport {FormIcon} from '../../../Components';\n\nclass LogIn extends React.PureComponent {\n  state = {\n    loading: false,\n    error: ''\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (err) {\n        this.setState({error: err.message});\n        return;\n      }\n      this.setState({\n        loading: true\n      }, () => {\n        login(values, {successMessage: 'Successfully Logged In'})\n          .then((response) => {\n            const {data} = response.data || {};\n            const {id: userId} = data || {};\n            updateStore({\n              token: 'abc123',\n              userId\n            });\n          })\n          .catch(({message}) => {\n            this.setState({\n              loading: false,\n              error: message\n            })\n          });\n      })\n    })\n  };\n  handleChange = (e) => {\n    const {value, name} = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const {loading, error} = this.state;\n\n    return (\n      <CenterView>\n        <Card title={\"Log In\"} style={styles.loginCard}>\n          {error && (\n            <Alert type=\"error\" message={error} showIcon/>\n          )}\n          <Form\n            onSubmit={this.handleSubmit}\n            layout={'vertical'}\n          >\n            <Form.Item label=\"E-Mail\">\n              {getFieldDecorator('email', {\n                rules: [\n                  {required: true, message: 'Please enter your email.'},\n                  {type: 'email', message: 'Please enter valid email'}\n                ]\n              })(\n                <Input\n                  placeholder=\"Please enter your email.\"\n                  prefix={<FormIcon type=\"mail\"/>}\n                />\n              )}\n            </Form.Item>\n            <Form.Item label=\"Password\">\n              {getFieldDecorator('password', {\n                rules: [{required: true, message: 'Please enter your password.'}]\n              })(\n                <Input.Password\n                  placeholder=\"Please enter your password.\"\n                  prefix={<FormIcon type=\"lock\"/>}\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <div style={styles.loginLinks}>\n                <Link to={\"/forgot\"}>\n                  Forgot Password\n                </Link>\n                { ' | ' }\n                <Link to={\"/register\"}>\n                  Create Account\n                </Link>\n              </div>\n              <Button\n                style={styles.loginButton}\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loading}\n              >\n                {loading ? 'Logging in ...' : 'Log In'}\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </CenterView>\n    )\n  }\n}\n\nconst styles = {\n  loginCard: {\n    maxWidth: 360,\n    width: '80%',\n    minWidth: 300\n  },\n  loginLinks: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: 12\n  },\n  loginButton: {\n    width: '100%'\n  }\n};\n\nexport default Form.create({name: 'login_form'})(LogIn);\n","import React from \"react\";\nimport {Card, Form, Input, Button, Alert} from 'antd';\n\nimport { updateStore } from '../../../Store';\nimport {Link} from \"react-router-dom\";\nimport {register} from '../../../Api/User';\nimport {CenterView} from '../../../Layouts';\nimport {FormIcon} from '../../../Components';\n\nclass Register extends React.PureComponent {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    loading: false,\n    error: '',\n    confirmDirty: false,\n  };\n  formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 }\n    }\n  };\n  tailFormItemLayout = {\n    wrapperCol: {\n      xs: { span: 24, offset: 0 },\n      sm: { span: 16, offset: 8 }\n    }\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, {confirmPassword, ...values}) => {\n      if (err) {\n        this.setState({ error: err.message });\n        return;\n      }\n      this.setState({\n        loading: true\n      }, () => {\n        register(values, {successMessage: 'Successfully Registered'})\n          .then((response) => {\n            const { data } = response.data || {};\n            const { id: userId } = data || {};\n            updateStore({\n              token: 'abc123',\n              userId\n            });\n          }).catch(({message}) => {\n          this.setState({\n            error: message,\n            loading: false\n          });\n        });\n      })\n    });\n  };\n  handleConfirmBlur = (e) => {\n    const { value } = e.target;\n    this.setState(({ confirmDirty }) =>\n      ({ confirmDirty: confirmDirty || !!value}));\n  };\n  validatePassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirmPassword'], { force: true });\n    }\n    callback();\n  };\n  validateConfirmPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback(\"Two passwords you've entered are different!\");\n    } else {\n      callback();\n    }\n  };\n  handleChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const { loading, error } = this.state;\n    return (\n      <CenterView>\n        <Card title={\"Register\"} style={styles.registerCard}>\n          {error && (\n            <Alert type=\"error\" message={error} showIcon/>\n          )}\n          <Form\n            onSubmit={this.handleSubmit}\n            {...this.formItemLayout}\n          >\n            <Form.Item label={'First Name'} hasFeedback>\n              {getFieldDecorator('firstName', {\n                rules: [{required: true, message: 'Please enter your first name.'}]\n              })(\n                <Input\n                  placeholder=\"Please enter your first name.\"\n                  prefix={<FormIcon type=\"user\" />}\n                />\n              )}\n            </Form.Item>\n            <Form.Item label={'Last Name'} hasFeedback>\n              {getFieldDecorator('lastName', {\n                rules: [{ required: true, message: 'Please enter your last name.'}]\n              })(\n                <Input\n                  placeholder=\"Please enter your last name.\"\n                  prefix={<FormIcon type=\"user\" />}\n                />\n              )}\n            </Form.Item>\n            <Form.Item label=\"E-Mail\" hasFeedback>\n              {getFieldDecorator('email', {\n                rules: [\n                  {required: true, message: 'Please enter your email.'},\n                  {type: 'email', message: 'Please enter valid email'}\n                ]\n              })(\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Please enter your email.\"\n                  prefix={<FormIcon type=\"mail\"/>}\n                />\n              )}\n            </Form.Item>\n            <Form.Item label=\"Password\" hasFeedback>\n              {getFieldDecorator('password', {\n                rules: [\n                  {required: true, message: 'Please enter your password.'},\n                  {validator: this.validatePassword}\n                ]\n              })(\n                <Input.Password\n                  placeholder=\"Please enter your password.\"\n                  prefix={<FormIcon type=\"lock\"/>}\n                />\n              )}\n            </Form.Item>\n            <Form.Item label=\"Confirm Password\" hasFeedback>\n              {getFieldDecorator('confirmPassword', {\n                rules: [\n                  {required: true, message: 'Please confirm your password.'},\n                  { validator: this.validateConfirmPassword}\n                ]\n              })(\n                <Input.Password\n                  placeholder=\"Please confirm your password.\"\n                  prefix={<FormIcon type=\"lock\"/>}\n                  onBlur={this.handleConfirmBlur}\n                />\n              )}\n            </Form.Item>\n            <Form.Item {...this.tailFormItemLayout}>\n              <div style={styles.registerLinks}>\n                <Link to={\"/login\"}>\n                  Login Instead\n                </Link>\n              </div>\n              <Button\n                style={styles.registerButton}\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loading}\n              >\n                { loading ? 'Registering...' : 'Register' }\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </CenterView>\n    )\n  }\n}\n\nconst styles = {\n  registerCard: {\n    maxWidth: 500,\n    width: '90%',\n    minWidth: 300\n  },\n  registerLinks: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  registerButton: {\n    width: '100%'\n  }\n};\n\nexport default Form.create({ name: 'register_form' })(Register);\n","import React from \"react\";\nimport {Card, Form, Input, Button, Alert} from 'antd';\n\nimport {Link} from \"react-router-dom\";\nimport {CenterView} from '../../../Layouts';\nimport {FormIcon} from '../../../Components';\n\nclass Forgot extends React.PureComponent {\n  state = {\n    loading: false,\n    error: \"\",\n    success: false,\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (err) {\n        this.setState({ error: err.message });\n        return;\n      }\n      this.setState({\n        loading: true\n      }, () => {\n        setTimeout(() => {\n          if (Math.random() < 0.5) {\n            this.setState({\n              loading: false,\n              error: 'There is an error, please try again.'\n            });\n          } else {\n            this.setState({\n              loading: false,\n              success: true,\n            })\n          }\n        }, Math.random() * 2000);\n      });\n    })\n  };\n  handleChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  render() {\n    const { loading, error, success } = this.state;\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <CenterView>\n        <Card title={'Forgot My Password'} style={styles.forgotCard}>\n          { success ? (\n          <p>Please check your email.</p>\n          ) : (\n          <>\n            { error && <Alert type=\"error\" message={error} showIcon/> }\n            <Form onSubmit={this.handleSubmit} layout={'vertical'}>\n              <Form.Item label=\"E-Mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {required: true, message: 'Please enter your email.'},\n                    {type: 'email', message: 'Please enter valid email'}\n                  ]\n                })(\n                  <Input\n                  placeholder=\"Please enter your email.\"\n                  prefix={<FormIcon type=\"mail\"/>}\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                <div style={styles.forgotLinks}>\n                  <Link to={\"/login\"}>\n                    Login Instead\n                  </Link>\n                  { ' | ' }\n                  <Link to={\"/register\"}>\n                    Create Account\n                  </Link>\n                </div>\n                <Button\n                  style={styles.forgotButton}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  loading={loading}\n                >\n                  {loading ? 'Sending ...' : 'Send'}\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n          )}\n        </Card>\n      </CenterView>\n    )\n  }\n}\n\nconst styles = {\n  forgotCard: {\n    maxWidth: 360,\n    width: '80%',\n    minWidth: 300\n  },\n  forgotLinks: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: 12\n  },\n  forgotButton: {\n    width: '100%'\n  }\n};\n\nexport default Form.create({ name: 'forgot_password' })(Forgot);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport LogIn from './LogIn';\nimport Register from './Register';\nimport Forgot from './Forgot';\n\nclass GuestRoutes extends React.PureComponent {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/login\" component={LogIn} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/forgot\" component={Forgot} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    );\n  }\n}\n\nexport default GuestRoutes;\n","import {getRequest, postRequest} from '../base';\n\n/**\n * @function getLanguages\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {\n *  \"status\": 200,\n *  \"explanation\": null,\n *  \"data\": [\n *    \"English\",\n *    \"Turkish\",\n *    \"Italian\"\n *  ]\n * }\n */\nexport const getLanguages = (extras) => getRequest('contents/languages', {}, extras);\n\n/**\n * @function getProfExam\n * @param language\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {\n *    \"status\": 200,\n *    \"explanation\": null,\n *    \"data\": [\n *        {\n *            \"languageId\": 1,\n *            \"typeId\": 1,\n *            \"imageUrl\": null,\n *            \"soundUrl\": null,\n *            \"question\": \"what is your name?\",\n *            \"optionA\": \"my name is..\",\n *            \"optionB\": \"your name is..\",\n *            \"optionC\": \"his name is...\",\n *            \"optionD\": \"her name is...\",\n *            \"correctAnswer\": 1\n *        },\n *        {\n *          ...\n *        },\n *\n *        ...\n *    ]\n * }\n */\nexport const getProfExam = (language, extras) => getRequest(`contents/prof`, {language}, extras);\n\n/**\n * @function getExerciseById\n * @param exerciseId\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {\n *  \"data\": {\n *    \"correctAnswer\": 0,\n *    \"grade\": 0,\n *    \"id\": 0,\n *    \"imageUrl\": \"string\",\n *    \"languageId\": 0,\n *    \"optionA\": \"string\",\n *    \"optionB\": \"string\",\n *    \"optionC\": \"string\",\n *    \"optionD\": \"string\",\n *    \"questionBody\": \"string\",\n *    \"soundUrl\": \"string\",\n *    \"tags\": [\n *      {\n *        \"exerciseId\": 0,\n *        \"id\": 0,\n *        \"tagText\": \"string\"\n *      }\n *    ],\n *    \"typeId\": 0\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n *}\n */\nexport const getExerciseById = (exerciseId, extras) => getRequest('contents', { id: exerciseId }, extras);\n\n/**\n * @function searchExercises\n * @param params\n * @param extra\n * @return {Promise<AxiosResponse<T>>}\n *\n * params: {\n *   \"grade\": 0,\n *   \"languageId\": 0,\n *   \"tag\": \"string\",\n *   \"typeId\": 0\n * }\n * success response\n * {\n *   \"data\": [\n *     {\n *       \"correctAnswer\": 0,\n *       \"grade\": 0,\n *       \"id\": 0,\n *       \"imageUrl\": \"string\",\n *       \"languageId\": 0,\n *       \"optionA\": \"string\",\n *       \"optionB\": \"string\",\n *       \"optionC\": \"string\",\n *       \"optionD\": \"string\",\n *       \"questionBody\": \"string\",\n *       \"soundUrl\": \"string\",\n *       \"tags\": [\n *         {\n *           \"exerciseId\": 0,\n *           \"id\": 0,\n *           \"tagText\": \"string\"\n *         }\n *       ],\n *       \"typeId\": 0\n *     }\n *   ],\n *   \"explanation\": \"string\",\n *   \"status\": 0\n * }\n */\nexport const searchExercises = (data, extras) => postRequest('search/exercises', data, extras);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {Card, Skeleton} from 'antd';\nimport {getLanguages} from '../../../Api/Content';\nimport {CenterView} from '../../../Layouts';\n\nclass LanguageSelect extends React.PureComponent {\n  state = {\n    languages: [],\n    loading: true\n  };\n  componentDidMount() {\n    getLanguages()\n      .then((response) => {\n        const { data = [] } = response.data || {};\n        this.setState({\n          languages: data,\n          loading: false\n        });\n      }).catch(console.error);\n  }\n\n  handleChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  render() {\n    const { languages, loading } = this.state;\n    return (\n      <CenterView>\n        <Card title=\"Select a Language\" style={styles.card}>\n          <Skeleton loading={loading} title={false}>\n            <ul>\n              { languages.map((language) => (\n                <li key={language}>\n                  <Link to={`/${language}/`}>\n                    { language }\n                  </Link>\n                </li>\n              )) }\n            </ul>\n          </Skeleton>\n        </Card>\n      </CenterView>\n    )\n  }\n}\n\nconst styles = {\n  card: {\n    marginBottom: 120,\n    width: 300\n  }\n};\n\nexport default LanguageSelect;\n","import {getRequest, postRequest} from '../base';\n\n/**\n * @function addGrade\n * @param data ({ grade, languageId, userId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": {\n *    \"grade\": 0,\n *    \"languageId\": 0,\n *    \"userId\": 0\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const addGrade = (data, extras) => postRequest('grades/add', data, extras);\n\n/**\n * @function getGrade\n * @param data ({ languageId, userId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n */\nexport const getGrade = (data, extras) => getRequest('grades/get', data, extras);\n","export const grades = [\n  { num_grade: 1, str_grade: 'A1 - Beginner' },\n  { num_grade: 2, str_grade: 'A2 - Elementary' },\n  { num_grade: 3, str_grade: 'B1 - Intermediate' },\n  { num_grade: 4, str_grade: 'B2 - Upper Intermediate' },\n  { num_grade: 5, str_grade: 'C1 - Advanced' },\n  { num_grade: 6, str_grade: 'C2 - Proficient' },\n];\n\nexport const numGradeToGrade = (() => {\n  const numToGradeMap = grades.reduce((acc, grade) => ({...acc, [grade.num_grade]: grade}), {});\n  return (num_grade) => numToGradeMap[num_grade] || {num_grade: 0, str_grade: 'Unknown Grade'};\n})();\n\nexport const numGradeToStrGrade = (num_grade) => numGradeToGrade(num_grade).str_grade;\n\nexport const calculateGrade = (correct, total) => {\n  let percent = 0\n  let str_grade = \"Unknown Grade\";\n  let num_grade = -1\n  if (total <= 0 || correct < 0 || correct > total) {\n    return { num_grade, str_grade };\n  } else {\n    percent = correct / total\n  }\n\n  if (percent > 0.9) {\n    num_grade = 6\n    str_grade = \"C2\"\n  } else if (percent > 0.85) {\n    num_grade = 5\n    str_grade = \"C1\"\n  } else if (percent > 0.75) {\n    num_grade = 4\n    str_grade = \"B2\"\n  } else if (percent > 0.60) {\n    num_grade = 3\n    str_grade = \"B1\"\n  } else if (percent > 0.40) {\n    num_grade = 2\n    str_grade = \"A2\"\n  } else {\n    num_grade = 1\n    str_grade = \"A1\"\n  }\n\n  return { num_grade, str_grade }\n}\n","import PropTypes from 'prop-types';\n\nexport const exerciseTypes = [\n  { typeId: 1, route: 'listening', name: 'Listening', icon: 'customer-service' },\n  { typeId: 2, route: 'reading', name: 'Reading', icon: 'read' },\n  { typeId: 4, route: 'grammar', name: 'Grammar', icon: 'file-text' },\n  { typeId: 3, route: 'vocabulary', name: 'Vocabulary', icon: 'book' },\n];\n\nexport const typeIdToType = (() => {\n  const typeMap = exerciseTypes.reduce((acc, exerciseType) =>\n    ({ ...acc, [exerciseType.typeId]: exerciseType }), {});\n  return (typeId) => typeMap[typeId] || { typeId: 0, route: '', name: 'Unknown' };\n})();\n\nexport const routeToType = (() => {\n  const typeMap = exerciseTypes.reduce((acc, exerciseType) =>\n    ({ ...acc, [exerciseType.route]: exerciseType }), {});\n  return (typeId) => typeMap[typeId] || { typeId: 0, route: '', name: 'Unknown' };\n})();\n\nexport const exerciseTypeType = PropTypes.shape({\n  typeId: PropTypes.number.isRequired,\n  route: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n});\n\nexport const exerciseContentType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  languageId: PropTypes.number.isRequired,\n  grade: PropTypes.number.isRequired,\n  typeId: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  soundUrl: PropTypes.string,\n  questionBody: PropTypes.string.isRequired,\n  optionA: PropTypes.string.isRequired,\n  optionB: PropTypes.string.isRequired,\n  optionC: PropTypes.string.isRequired,\n  optionD: PropTypes.string.isRequired,\n  correctAnswer: PropTypes.number.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    exerciseId: PropTypes.number.isRequired,\n    tagText: PropTypes.string.isRequired\n  })).isRequired\n});\n","import PropTypes from 'prop-types';\n\nexport const languages = [\n  { languageId: 1, name: 'English' },\n  { languageId: 2, name: 'Turkish' },\n  { languageId: 3, name: 'Italian' }\n];\n\nexport const nameToLanguage = (() => {\n  const lanToIdMap = languages.reduce((acc, language) => ({ ...acc, [language.name]: language }), {});\n  return (languageName) => lanToIdMap[languageName] || { languageId: 0, name: 'Unknown Language' };\n})();\n\nexport const idToLanguage = (() => {\n  const lanIdToNameMap = languages.reduce((acc, language) => ({ ...acc, [language.languageId]: language }), {});\n  return (languageId) => lanIdToNameMap[languageId] || { languageId: 0, name: 'Unknown Language' };\n})();\n\nexport const languageType = PropTypes.shape({\n  languageId: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired\n});\n","export const appColorDark = '#0c360b';\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, useParams, useLocation} from 'react-router-dom';\nimport {getGrade} from '../../../../Api/Grade';\nimport { connect, storeType } from '../../../../Store';\nimport {GradesHelper, ExercisesHelper, LanguagesHelper} from '../../../../Helpers';\nimport {Menu, Tag, Descriptions, Skeleton, Icon} from 'antd';\n\nconst routes = [\n  { route: 'main', name: 'Main', icon: 'project' },\n  { route: 'proficiency-exam', name: 'Proficiency Exam', icon: 'diff' },\n];\n\nconst LanguageSidebar = ({ store }) => {\n  const {language: languageName} = useParams();\n  const { pathname } = useLocation();\n  const { languageId } = LanguagesHelper.nameToLanguage(languageName);\n\n  const [grade, setGrade] = useState();\n\n  const currentRoute = pathname.split('/').slice(2).filter((x) => x).join('/') || 'main';\n\n  useEffect(() => {\n    if (languageId) {\n      getGrade({userId: store.userId, languageId}).then((response) => {\n        const {data = {}} = (response.data || {});\n        setGrade((data || {}).grade || null);\n      }).catch(console.log)\n    }\n  }, [languageName]);\n\n  let str_grade = GradesHelper.numGradeToStrGrade(grade);\n\n  return (\n    <div>\n      <div style={styles.header}>\n        <Skeleton loading={grade === undefined} title={false}>\n          <Descriptions title={languageName}>\n            <Descriptions.Item label={'Grade'}>\n              <Tag color={'#87d068'}>{grade === null ? 'Not Graded Yet' : str_grade}</Tag>\n            </Descriptions.Item>\n          </Descriptions>\n        </Skeleton>\n      </div>\n      <Menu selectedKeys={[currentRoute]} mode=\"inline\">\n        {\n          routes.map(({ name, route, icon }) => (\n            <Menu.Item key={route}>\n              <Icon type={icon} />\n              { name }\n              <Link to={`/${languageName}/${route}`} />\n            </Menu.Item>\n          ))\n        }\n        <Menu.SubMenu\n          key=\"exercises\"\n          title={\n            <span>\n              <Icon type=\"reconciliation\" />\n              <span>Exercises</span>\n            </span>\n          }\n        >\n          <Menu.Item key={'exercises/search'}>\n            <Icon type='file-search' />\n            Search\n            <Link to={`/${languageName}/exercises/search`} />\n          </Menu.Item>\n          { ExercisesHelper.exerciseTypes.map(({ typeId, route, name, icon }) => (\n            <Menu.Item key={`exercises/${route}`}>\n              <Icon type={icon} />\n              { name }\n              <Link to={`/${languageName}/exercises/${route}`} />\n            </Menu.Item>\n          ))}\n        </Menu.SubMenu>\n        <Menu.Item key={'writing'}>\n          <Icon type={'form'} />\n          Writing\n\t  <Link to={`/${languageName}/writing`} />\n        </Menu.Item>\n\t<Menu.Item key={'suggest'}>\n          <Icon type={'question'} />\n          Suggest Exercise\n\t  <Link to={`/${languageName}/suggest`} />\n        </Menu.Item>\n      </Menu>\n    </div>\n  );\n};\n\nconst styles = {\n  header: {\n    margin: '24px 12px'\n  }\n};\n\nLanguageSidebar.propTypes = {\n  store: storeType\n};\n\nexport default connect(LanguageSidebar);\n","import React from 'react';\nimport {PageHeader, Card, Button, Icon, Skeleton, Radio} from 'antd';\nimport { toast } from 'react-toastify';\nimport {getProfExam} from '../../../../Api/Content';\nimport {addGrade} from '../../../../Api/Grade';\nimport { connect, storeType } from '../../../../Store';\nimport {GradesHelper, LanguagesHelper} from '../../../../Helpers';\n\nclass ProfExam extends React.PureComponent {\n  static propTypes = {\n    store: storeType\n  };\n  state = {\n    questions: [],\n    answers: [],\n    currentQuestion: 0,\n    currentGrade: 0,\n    lastAnswered: -1,\n    loading: true,\n  };\n\n  componentDidMount() {\n    const { language: languageName } = this.props.match.params;\n    getProfExam(languageName).then((response) => {\n      const { data } = response.data;\n      if (data) {\n        this.setState({\n          questions: data.map(({ optionA, optionB, optionC, optionD, correctAnswer, ...rest }) => ({\n            ...rest,\n            options: [ optionA, optionB, optionC, optionD ],\n            correctAnswer: correctAnswer - 1\n          })),\n          loading: false\n        });\n      }\n    }).catch(console.error);\n  }\n\n  answerQuestion = (optionIndex) => {\n    const { currentQuestion, currentGrade, lastAnswered, questions } = this.state;\n    /*if (currentQuestion <= lastAnswered) {\n      toast.error(\"You can't change your choice!\");\n    } else {*/\n      const question = questions[currentQuestion] || {};\n      const answers = [...this.state.answers];\n      answers[currentQuestion] = optionIndex + 1;\n      const { correctAnswer } = question;\n      this.setState({\n        answers,\n        lastAnswered: lastAnswered + 1,\n        currentGrade: currentGrade + (optionIndex === correctAnswer ? 1 : 0)\n      });\n    //}\n  };\n\n\n  nextQuestion = (increment = 1) => {\n    const { store } = this.props;\n    const { language: languageName } = this.props.match.params;\n    const language = LanguagesHelper.nameToLanguage(languageName);\n    const { currentQuestion, questions, answers, currentGrade } = this.state;\n    if (currentQuestion + increment === questions.length) {\n      const currentGrade = questions\n        .reduce((grade, {correctAnswer}, questionIndex) =>\n          grade + (((answers[questionIndex] || 0) === correctAnswer) ? 0 : 1), 0);\n      const { num_grade, str_grade } = GradesHelper.calculateGrade(currentGrade, questions.length);\n      addGrade({\n        userId: store.userId,\n        languageId: language.languageId,\n        grade: num_grade\n      }).then((response) => {\n        toast.info(`Congrats, you got ${currentGrade} correct answers out of ${questions.length} questions.\\nYour grade is ${str_grade}`);\n        const { match: { params: { language } }, history } = this.props;\n        history.push(`/${language}`);\n        console.log(response);\n        // what to do next?\n      }).catch(console.error);\n    } else {\n      this.setState({\n        currentQuestion: Math.max(0, Math.min(questions.length - 1, currentQuestion + increment))\n      });\n    }\n  };\n\n  render() {\n    const { questions,answers, currentQuestion, currentGrade, lastAnswered, loading } = this.state;\n    const question = questions[currentQuestion] || {};\n    const answer = answers[currentQuestion];\n    const { questionBody = '', options = [], correctAnswer = 0 } = question;\n\n    return (\n      <div>\n        <PageHeader\n          title={\"Proficiency Exam\"}\n          subTitle={loading ? 'Loading ...' : `${ currentQuestion + 1 } / ${questions.length}`}\n        />\n        <Card\n          title={(\n            <Skeleton loading={loading} paragraph={false}>\n              {questionBody}\n            </Skeleton>\n          )}\n          actions={[\n            <Button\n              color=\"dashed\"\n              onClick={() => this.nextQuestion(-1)}\n              disabled={currentQuestion === 0}\n            >\n              <Icon type=\"left\" />\n              Previous Question\n            </Button>,\n            <Button\n              color=\"primary\"\n              onClick={() => this.nextQuestion()}\n              disabled={lastAnswered < currentQuestion}\n            >\n              <Icon type=\"right\" />\n              { currentQuestion + 1 === questions.length ? 'Finish Exam' : 'Next Question' }\n            </Button>\n          ]}\n          >\n          <Skeleton loading={loading} paragraph={false}>\n            <Radio.Group value={answer}>\n              {\n                options.map((option, optionIndex) => (\n                  <Radio.Button\n                    key={`Option_${optionIndex}`}\n                    value={optionIndex + 1}\n                    onClick={() => this.answerQuestion(optionIndex)}\n                  >\n                    { option }\n                  </Radio.Button>\n                ))\n              }\n            </Radio.Group>\n          </Skeleton>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default connect(ProfExam);\n","import { postRequest} from '../base';\n\n/**\n * @function addSuggestion\n * @param data ({ question, choice1, choice2, choice3, choice4 })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": {\n *    \"question\": \"\",\n *    \"choice1\": \"\",\n *    \"choice2\": \"\",\n *    \"choice3\": \"\",\n *    \"choice4\": \"\"\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const addSuggestion = (data, extras) => postRequest('suggestion/add', data, extras);\n","import React from 'react';\nimport { Form, Row, Col, Input, Button, Icon } from 'antd';\nimport {addSuggestion} from \"../../../../Api/Suggest\";\n\nclass Suggest extends React.Component {\n    state = {\n        expand: false,\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const form = {\n            question: e.target[\"question\"].value,\n            choice1: e.target[\"choice1\"].value,\n            choice2: e.target[\"choice2\"].value,\n            choice3: e.target[\"choice3\"].value,\n            choice4: e.target[\"choice4\"].value,\n        }\n        addSuggestion(form);\n        console.log(form);\n    };\n\n    // To generate mock Form.Item\n    getFields() {\n        const count = this.state.expand ? 10 : 6;\n        const { getFieldDecorator } = this.props.form;\n        const children = [];\n        for (let i = 0; i < 4; i++) {\n            children.push(\n                <Col span={6} key={i} style={{ display: i < count ? 'block' : 'none' }}>\n                    <Form.Item>\n                        <Input name={`choice${i+1}`} addonBefore={`Choice ${i+1}`} placeholder=\"Choices\"></Input>\n                    </Form.Item>\n                </Col>,\n            );\n        }\n        return children;\n    }\n\n    render() {\n        return (\n            <Form className=\"suggest-form\" onSubmit={this.handleSubmit}>\n                <Row gutter={24}><Form.Item><Input name={\"question\"} addonBefore={\"Question\"} placeholder=\"Write Your question here\"></Input></Form.Item></Row>\n                <Row gutter={24}>{this.getFields()}</Row>\n                <Row>\n                    <Col span={12} style={{ textAlign: 'right' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Suggest Exercise\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        );\n    }\n}\n\nexport default Form.create({ name: 'suggest' })(Suggest);\n;","import {getRequest, postRequest} from \"../base\";\n\n//TODO backend call\n\n/**\n * @function addWriting\n * @param data ({ languageId, userId, subject, text })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": {\n *    \"languageId\": 0,\n *    \"subject\": \"\",\n *    \"text\": \"\"\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const addWriting = (data, extras) => postRequest('essays', data, extras);\n\n\nexport const getAssignmentsById = (languageId, extras) => getRequest('assignments/language', { id: languageId }, extras);\n\nexport const uploadEssayPhoto = (data, extras) => postRequest('files/images/essay', data, extras);","import React from 'react';\nimport {Form, Input, Button, PageHeader, Select, Switch, Upload, message, Icon } from 'antd';\nimport {addWriting, getAssignmentsById, uploadEssayPhoto} from \"../../../../Api/Writing\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport {LanguagesHelper} from \"../../../../Helpers\";\nimport {nameToLanguage} from \"../../../../Helpers/languages\";\nimport { connect } from \"../../../../Store\";\nimport {toast} from \"react-toastify\";\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n}\n\nclass Writing extends React.Component {\n    constructor(props) {\n        super(props);\n        const { language } = props.match.params;\n        this.userId = this.props.store.userId;\n        this.languageId = nameToLanguage(language).languageId;\n        this.state = {\n           subject: \"\",\n            text: \"\",\n            submitted: false,\n            photo: false,\n            loading: false,\n            chosenAssignment: null,\n            assignments: []\n        };\n    }\n\n    componentDidMount() {\n        getAssignmentsById(this.languageId).then((res) => {\n            const { data = [] } = res.data || {};\n            this.setState({\n                assignments: data\n            });\n        })\n    }\n\n    onChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    submit = (e)=> {\n        e.preventDefault();\n        const { photo, photoUrl } = this.state;\n        this.props.form.validateFields((err, values) => {\n            if (err) {\n                this.setState({ error: err.message });\n                return;\n            }\n            addWriting({\n                authorId: this.userId,\n                assignmentId: values.assignmentId,\n                sourceType: photo ? 2 : 1,\n                source: photo ? photoUrl : values.body\n            }).then(()=> {\n                toast.success('You have successfully submitted essay');\n                this.props.history.push('/essays');\n            });\n        })\n\n    }\n\n    handleUploadChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl => {\n                this.setState({\n                    imageUrl,\n                    loading: false,\n                });\n                uploadEssayPhoto({\n                    authorId: this.userId,\n                    base64Data: imageUrl,\n                    exerciseId: this.state.chosenAssignment\n                }).then(res => {\n                    const { data } = res.data || {};\n                    this.setState({\n                        photoUrl: data\n                    });\n                }).catch(console.log);\n                // upload image maybe\n            });\n        }\n    };\n    renderUpload = () => {\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        const { imageUrl } = this.state;\n        return (\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                beforeUpload={beforeUpload}\n                onChange={this.handleUploadChange}\n            >\n                {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n            </Upload>\n        );\n    };\n\n    render() {\n        const { form } = this.props;\n        const { photo, subject, text, submitted, assignments } = this.state;\n        return (\n            !submitted ? (<div style={{ overflow: 'auto', height: '100%' }}>\n                <PageHeader\n                    title=\"Writing Exercise\"\n                />\n                <Form layout=\"vertical\" onSubmit={this.submit}>\n                    <Form.Item label=\"Subject\" >\n                        {\n                            form.getFieldDecorator('assignmentId', {\n                                rules: [{required: true, message: 'Please select a assignmentId'}]\n                            })(\n                                <Select placeholder=\"Please choose a subject from here\" onChange={(val) => this.setState({ chosenAssignment: val })}>\n                                    { assignments.map(({ id, question }) => (\n                                        <Select.Option key={id} value={id}>\n                                            { question }\n                                        </Select.Option>\n                                    ))}\n                                </Select>\n                            )\n                        }\n                    </Form.Item>\n                    Text <Switch onChange={(photo) => this.setState({ photo })}/> Photo\n                    <br /> <br/>\n                    {\n                        photo ? (\n                            this.renderUpload()\n                        ) : (\n                            <Form.Item label=\"Essay\">\n                                {\n                                    form.getFieldDecorator('body', {\n                                        rules: [{required: true, message: 'Please write your essay'}]\n                                    })(\n                                        <Input.TextArea rows={30} placeholder=\"Write your essay here\" />\n                                    )\n                                }\n\n                            </Form.Item>\n                        )\n                    }\n                    <Form.Item >\n                        <Button htmlType=\"submit\" type=\"primary\">Submit</Button>\n                    </Form.Item>\n                </Form>\n            </div>) : (\n                <div>\n                    <PageHeader\n                        title=\"Writing Exercise\"\n                    />\n                    <span>You have successfully submitted your writing exercise!</span>\n                </div>\n            )\n        );\n    }\n}\n\nexport default connect(withRouter(Form.create({name: 'writing_form'})(Writing)));","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nimport {connect, storeType} from '../../../../Store';\nimport {getGrade} from '../../../../Api/Grade';\nimport {GradesHelper} from '../../../../Helpers';\n\nconst Main = ({ store }) => {\n\n  const { language } = useParams();\n\n  const languageId = language === 'English' ? 1 : language === 'Turkish' ? 2 : language === 'Italian' ? 3 : 0;\n\n  const [loading, setLoading] = useState(false);\n\n  const [grade, setGrade] = useState();\n\n  useEffect(() => {\n    if (languageId) {\n      setLoading(true);\n      getGrade({userId: store.userId, languageId}).then((response) => {\n        const {data = {}} = response.data || {};\n        setGrade((data || {}).grade || 0);\n        setLoading(false);\n      })\n    }\n  }, [language, languageId, store.userId]);\n\n  if (languageId === 0) {\n    return (\n      <div>\n        Unknown Language\n      </div>\n    )\n  };\n\n  let str_grade = GradesHelper.numGradeToStrGrade(grade);\n\n  return (\n    <div>\n      <h3>{ language }</h3>\n      { loading ? (\n        <h4>Loading your grade ...</h4>\n      ) : (\n        <>\n          <h4> { grade ? `Your grade is ${str_grade}` : \"You don't have a grade in this language\" } </h4>\n          <Link to={`/${language}/proficiency-exam`}>\n            { grade ? 'Click here to re-take proficiency exam' : 'Click here to take proficiency exam' }\n          </Link>\n        </>\n      )}\n    </div>\n  )\n};\n\nMain.propTypes = {\n  store: storeType\n};\n\nexport default connect(Main);\n","import React, {useState, createRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport {Button, Card, Icon, PageHeader, Radio, Skeleton, Tag} from 'antd';\nimport {toast} from 'react-toastify';\n\nimport {ExercisesHelper, LanguagesHelper} from '../../../../../Helpers';\n\nconst ExerciseList = ({\n  title,\n  loading,\n  language,\n  exerciseType,\n  exercises,\n}) => {\n  const [currentExerciseIndex, setCurrentExerciseIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const history = useHistory();\n  const currentExercise = exercises[currentExerciseIndex] || {};\n  const currentAnswer = answers[currentExerciseIndex];\n  const { questionBody, tags = [], imageUrl, soundUrl,\n    optionA, optionB, optionC, optionD } = currentExercise;\n  const options = [optionA, optionB, optionC, optionD];\n  const audioRef = createRef();\n  const nextExercise = (increment = 1) => {\n    if (currentExerciseIndex + increment === exercises.length) {\n      const correctAnswers = exercises\n        .reduce((sum, { correctAnswer }, i) =>\n          sum + (answers[i] === correctAnswer ? 1 : 0), 0);\n      const incorrectAnswers = exercises\n        .reduce((sum, { correctAnswer }, i) =>\n          sum + ((answers[i] && answers[i] !== correctAnswer) ? 1 : 0), 0);\n      toast.info(`You finished the ${title.toLowerCase()} with ${\n        correctAnswers\n      } correct answers, ${\n        incorrectAnswers\n      } incorrect answers and ${\n        exercises.length - correctAnswers - incorrectAnswers\n      } skipped!`);\n      history.push(`/${language.name}`);\n    } else {\n      setCurrentExerciseIndex(currentExerciseIndex + increment);\n    }\n  };\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      setTimeout(() => {\n        if (audioRef.current) {\n          audioRef.current.load();\n        }\n      }, 100);\n    }\n  }, [soundUrl]);\n\n  const answerExercise = (optionIndex) => {\n    if (currentAnswer) {\n      toast.error(\"You can't change your choice!\");\n    } else {\n      const nextAnswers = [...answers];\n      nextAnswers[currentExerciseIndex] = optionIndex + 1;\n      setAnswers(nextAnswers);\n    }\n  };\n\n  return (\n    <div>\n      <PageHeader\n        title={title}\n        subTitle={loading ? 'Loading ...' : `${\n          currentExerciseIndex + 1\n        } / ${exercises.length}`}\n      />\n      { tags.length ? (\n        <div style={styles.tags}>\n          <Icon type={'tags'} />\n          { '  '}\n          {tags.map(({ id, tagText }) => (\n            <Tag key={id}>\n              { tagText }\n            </Tag>\n          ))}\n        </div>\n      ) : null}\n      <Card\n        loading={loading}\n        title={(\n          <Skeleton loading={loading} paragraph={false}>\n            { questionBody }\n          </Skeleton>\n        )}\n        actions={[\n          <Button\n            color=\"dashed\"\n            onClick={() => nextExercise(-1)}\n            disabled={currentExerciseIndex === 0}\n          >\n            <Icon type=\"left\" />\n            Previous Question\n          </Button>,\n          <Button\n            color=\"primary\"\n            onClick={() => nextExercise(1)}\n          >\n            <Icon type=\"right\" />\n            { currentExerciseIndex + 1 === exercises.length ? 'Finish Exercises' : 'Next Question' }\n          </Button>\n        ]}\n      >\n        {imageUrl && (\n          <div>\n            <img src={imageUrl} alt={`${title} ${currentExerciseIndex + 1}`} data-testid=\"image\"/>\n          </div>\n        )}\n        {\n          soundUrl && (\n            <div style={styles.sound}>\n              <audio controls ref={audioRef} data-testid=\"audio\">\n                <source src={soundUrl} data-testid=\"audio-source\" />\n              </audio>\n            </div>\n          )\n        }\n        <Radio.Group value={currentAnswer}>\n          {\n            options.map((option, optionIndex) => (\n              <Radio.Button\n                key={`Option_${optionIndex}`}\n                value={optionIndex + 1}\n                onClick={() => answerExercise(optionIndex)}\n                style={currentAnswer && (\n                  optionIndex + 1 === currentExercise.correctAnswer ?\n                    styles.correctAnswer : styles.incorrectAnswer\n                )}\n              >\n                { option }\n              </Radio.Button>\n            ))\n          }\n        </Radio.Group>\n      </Card>\n    </div>\n  )\n};\n\nExercisesHelper.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool,\n  language: LanguagesHelper.languageType.isRequired,\n  exerciseType: ExercisesHelper.exerciseTypeType,\n  exercises: PropTypes.arrayOf(ExercisesHelper.exerciseContentType).isRequired\n};\n\nExercisesHelper.defaultProps = {\n  title: 'Exercises',\n  loading: false,\n  exerciseType: null\n};\n\nconst styles = {\n  correctAnswer: {\n    backgroundColor: '#efe'\n  },\n  incorrectAnswer: {\n    backgroundColor: '#fee'\n  },\n  tags: {\n    marginBottom: 16\n  },\n  sound: {\n    margin: '12px 0'\n  }\n};\n\nexport default ExerciseList;\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Card, PageHeader} from 'antd';\nimport {connect} from '../../../../Store';\nimport {searchExercises} from '../../../../Api/Content';\nimport {ExercisesHelper, LanguagesHelper} from '../../../../Helpers';\nimport {CenterView} from '../../../../Layouts';\nimport ExerciseList from './ExerciseList';\n\nconst Exercises = ({store}) => {\n  const {userId} = store;\n  const {language:languageName, exerciseType: exerciseTypeRoute} = useParams();\n  const exerciseType = ExercisesHelper.routeToType(exerciseTypeRoute);\n  const language = LanguagesHelper.nameToLanguage(languageName);\n  const [exercises, setExercises] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    searchExercises({\n      languageId: language.languageId,\n      typeId: exerciseType.typeId\n    }).then((response) => {\n      const {data = []} = response.data || {};\n      data.sort((a, b) => a.grade - b.grade);\n      // sort from easiest to hardest\n      setExercises(data);\n      setLoading(false);\n    });\n\n  }, [languageName, exerciseTypeRoute]);\n  return (\n    <ExerciseList\n      title={`${exerciseType.name} Exercises`}\n      loading={loading}\n      language={language}\n      exerciseType={exerciseType}\n      exercises={exercises}\n    />\n  );\n};\n\nexport default connect(Exercises);\n","import { Form, Icon, Input, Button, Select, Row } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nimport {ExercisesHelper, GradesHelper, LanguagesHelper} from '../../../../../Helpers';\n\nconst { Option } = Select;\n\nconst Search = ({ onSubmit, form }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    })\n  }\n\n  const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = form;\n\n  return (\n    <Form layout=\"inline\" onSubmit={handleSubmit}>\n      <Form.Item>\n        {getFieldDecorator('tag', { initialValue: \"\" })(\n          <Input placeholder=\"Any\" label=\"Tag\" />\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('grade', { initialValue: 0 })(\n          <Select\n            title=\"Grade\"\n            style={{width: 120}}\n          >\n            <Option value={0}>All Grades</Option>\n            { GradesHelper.grades.map(({ num_grade, str_grade}) => (\n              <Option value={num_grade}>{str_grade}</Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('typeId', { initialValue: 0 })(\n          <Select\n            title=\"Type\"\n            style={{width: 120}}\n          >\n            <Option value={0}>All Types</Option>\n            { ExercisesHelper.exerciseTypes.map(({ typeId, name }) => (\n              <Option value={typeId}>{name}</Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('languageId', { initialValue: '' })(\n          <Select\n            label=\"Language\"\n            style={{width: 160}}\n          >\n            <Option value=''>All Languages</Option>\n            { LanguagesHelper.languages.map(({ languageId, name }) => (\n              <Option value={languageId}>{name}</Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n      <Button type=\"primary\" htmlType=\"submit\">\n        Search\n      </Button>\n    </Form>\n  );\n}\n\nexport default Form.create({name: 'inline_login'})(Search);\n","import React, { useState } from 'react';\nimport {Icon, Tag, Collapse, Descriptions, Radio} from 'antd';\n\nimport InlineSearch from './Search';\nimport {searchExercises} from '../../../../../Api/Content';\nimport {ExercisesHelper, GradesHelper, LanguagesHelper} from '../../../../../Helpers';\n\nconst ExerciseSearch = () => {\n  const [exercises, setExercises] = useState([]);\n\n  const handleSearch = (values) => {\n    searchExercises(values)\n      .then( res => {\n        const { data = [] } = res.data || [];\n        setExercises(data);\n      })\n      .catch(console.log)\n  }\n  return (\n    <div style={styles.card}>\n      <div style={styles.innerCard}>\n        <InlineSearch onSubmit={handleSearch}/>\n        { exercises.length > 0 && (\n          <Collapse accordion>\n            {exercises.map(({ id, tags, typeId, languageId, questionBody, imageUrl, grade,\n                              optionA, optionB, optionC, optionD, correctAnswer }) => (\n              <Collapse.Panel key={id} header={\n                <Descriptions column={4}>\n                  <Descriptions.Item label={'Type'}>\n                    { ExercisesHelper.typeIdToType(typeId).name }\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Language'}>\n                    { LanguagesHelper.idToLanguage(languageId).name }\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Grade'}>\n                    { GradesHelper.numGradeToStrGrade(grade) }\n                  </Descriptions.Item>\n                  <Descriptions.Item label={<span>\n                    <Icon type=\"tags\" />\n                  </span>}>\n                    { tags.map(({ id, tagText }) => (\n                      <Tag key={id}>\n                        { tagText }\n                      </Tag>\n                    ))}\n                    { tags.length === 0 && 'No tags.' }\n                  </Descriptions.Item>\n                </Descriptions>\n              }>\n                { imageUrl && <img src={imageUrl} alt={imageUrl} /> }\n                <div>\n                  <h3>\n                    { questionBody }\n                  </h3>\n                </div>\n                <div>\n                  <Radio.Group>\n                    { [optionA, optionB, optionC, optionD].map((option, optionIndex) => (\n                      <Radio.Button\n                        key={`Option_${optionIndex}`}\n                        value={optionIndex + 1}\n                        style={ optionIndex + 1 === correctAnswer ? styles.correctAnswer : styles.incorrectAnswer }\n                      >\n                        { option }\n                      </Radio.Button>\n                    ))}\n                  </Radio.Group>\n                </div>\n              </Collapse.Panel>\n            ))}\n          </Collapse>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  card: {\n    padding: 20,\n    height: \"100%\",\n  },\n  innerCard: {\n    overflow: \"auto\",\n    maxHeight: \"100%\",\n  },\n  correctAnswer: {\n    backgroundColor: '#efe'\n  },\n  incorrectAnswer: {\n    backgroundColor: '#fee'\n  },\n}\n\nexport default ExerciseSearch;\n","import React from 'react';\nimport { Layout, Breadcrumb } from 'antd';\nimport {Switch, Route, Redirect, useParams, useLocation, NavLink} from 'react-router-dom';\n\nimport LanguageSidebar from './LanguageSidebar';\nimport ProfExam from './ProfExam';\nimport Suggest from \"./Suggest\";\nimport Writing from \"./Writing\";\nimport Main from './Main';\nimport Exercises from './Exercises';\nimport {ExercisesHelper} from '../../../Helpers';\nimport ExerciseSearch from './Exercises/ExerciseSearch';\n\nconst pathToLabel = {\n  'proficiency-exam': 'Proficiency Exam',\n  'exercises': 'Exercises',\n  ...ExercisesHelper.exerciseTypes.reduce((acc, { route, name }) => ({ [route]: name, ...acc }), {}),\n  'search': 'Search',\n};\n\nconst LanguageRoutes = () => {\n    const { language } = useParams();\n    const { pathname } = useLocation();\n    const paths = pathname.split('/').filter((x) => x);\n    return (\n      <Layout style={styles.container}>\n        <Layout.Sider theme={'light'} width={200} collapsible>\n          <LanguageSidebar />\n        </Layout.Sider>\n        <Layout style={styles.layout}>\n          <Breadcrumb style={styles.breadcrumb}>\n            { paths.map((path, index) => (\n              <Breadcrumb.Item key={path}>\n                <NavLink to={`/${paths.slice(0, index + 1).join('/')}`}>\n                  { pathToLabel[path] || path }\n                </NavLink>\n              </Breadcrumb.Item>\n            )) }\n          </Breadcrumb>\n          <Layout.Content style={styles.content}>\n            <Switch>\n              <Route exact path='/:language' component={Main} />\n              <Route exact path='/:language/exercises/search' component={ExerciseSearch} />\n\t      <Route path='/:language/suggest' component={Suggest} />\n\t      <Route path='/:language/writing' component={Writing} />\n              <Route exact path='/:language/exercises/:exerciseType' component={Exercises} />\n              <Route path='/:language/proficiency-exam' component={ProfExam} />\n              <Redirect to={`/${language}`}/>\n            </Switch>\n          </Layout.Content>\n        </Layout>\n      </Layout>\n    )\n};\n\nconst styles = {\n  container: {\n    height: '100%'\n  },\n  layout: {\n    height: '100%',\n    padding: '0 24px 24px',\n  },\n  content: {\n    background: '#fff',\n    padding: 24,\n    margin: 0\n  },\n  breadcrumb: {\n    margin: '16px 0'\n  }\n};\n\nexport default LanguageRoutes;\n","import React from 'react';\nimport {CenterView} from '../../../Layouts';\nimport {Typography, Card} from 'antd';\nimport {Link} from 'react-router-dom';\n\nclass Dashboard extends React.PureComponent {\n  render() {\n    return (\n      <CenterView>\n        <Card>\n          <Typography.Title level={1}>\n            Welcome to Kereviz !\n          </Typography.Title>\n          <Link to={'/language-select'}>Please select a language to continue</Link>\n        </Card>\n      </CenterView>\n    )\n  }\n}\n\nexport default Dashboard;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, useLocation} from 'react-router-dom';\nimport {Typography, Menu, Icon} from 'antd';\n\nimport {connect, storeType, updateStore} from '../../../Store';\nimport {getUserById} from '../../../Api/User';\nimport {ColorsHelper} from '../../../Helpers';\n\nimport AppLogo from '../../../Images/app_icon_transparent.png';\n\nconst logOut = () => {\n  updateStore({\n    token: '',\n    userId: ''\n  });\n};\n\nconst routes = [\n  {\n    name: 'Home',\n    route: '/home'\n  },\n  {\n    name: 'Sample Page',\n    route: '/sample'\n  },\n  {\n    name: 'Select Language',\n    route: '/language-select'\n  },\n  {\n    name: 'User Search',\n    route: '/users',\n  },\n  {\n    name: 'Chat',\n    route: '/chat',\n  },\n  {\n    name: \"My Essays\",\n    route: \"/essays\",\n  },\n  {\n    name: \"Essay Reviews\",\n    route: \"/reviews\"\n  }\n];\n\nconst UserNavbar = ({ store: { userId } }) => {\n  const { pathname } = useLocation();\n  const [user, setUser] = useState();\n  useEffect(() => {\n    if (userId) {\n      getUserById(userId)\n        .then((response) => {\n          const { data = {} } = response.data || {};\n          setUser(data);\n        })\n        .catch(console.log)\n    }\n  }, [userId]);\n\n  const { firstName, lastName } = user || {};\n\n  return (\n    <>\n      <div style={styles.logo}>\n        <img src={AppLogo} alt=\"kereviz-logo\" style={styles.logoImage}/>\n        <Typography.Title level={3} style={styles.logoTitle}>\n          Kereviz\n        </Typography.Title>\n      </div>\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        style={styles.menu}\n        selectedKeys={[pathname]}\n      >\n        {\n          routes.map(({ name, route }) => (\n            <Menu.Item key={route}>\n              { name }\n              <Link to={route} />\n            </Menu.Item>\n          ))\n        }\n        <Menu.SubMenu\n          style={styles.profileSubmenu}\n          title={\n            <span className=\"submenu-title-wrapper\">\n              <Icon type=\"user\" />\n              { firstName } { lastName}\n            </span>\n          }\n        >\n          <Menu.Item key={`/users/${userId}`}>\n            Profile\n            <Link to={`/users/${userId}`} />\n          </Menu.Item>\n          <Menu.Item onClick={logOut}>\n            Log Out\n          </Menu.Item>\n        </Menu.SubMenu>\n      </Menu>\n    </>\n  );\n};\n\nUserNavbar.propTypes = {\n  store: storeType\n};\n\nconst styles = {\n  logo: {\n    height: '100%',\n    float: 'left',\n    margin: '0 24px 0 -8px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  logoTitle: {\n    color: '#fff',\n    margin: '0 0 0 4px'\n  },\n  logoImage: {\n    height: 36\n  },\n  menu: {\n    lineHeight: '64px',\n    backgroundColor: ColorsHelper.appColorDark\n  },\n  profileSubmenu: {\n    float: 'right'\n  }\n};\n\nexport default connect(UserNavbar);\n","import {getRequest} from '../base';\n\n/**\n * @function getGreeting\n * @param data ({ name })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {\n *  \"id\": 3,\n *  \"content\": \"Hello, group9!\"\n * }\n */\nexport const getGreeting = (data, extras) => getRequest('greeting', data, extras);\n","import React from 'react';\nimport { Card, Form, Input, Button } from 'antd';\nimport axios from 'axios';\nimport {getGreeting} from '../../../Api/Greeting';\nimport {CenterView} from '../../../Layouts';\n\nclass Sample extends React.PureComponent {\n  state = {\n    name: '',\n    greeting: '',\n    loading: false,\n  };\n  handleChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (err) {\n        this.setState({ error: err.message });\n        return;\n      }\n      this.setState({\n        loading: true\n      }, async () => {\n        try {\n          const res = await getGreeting(values);\n          const {content} = res.data || {};\n          this.setState({\n            greeting: content,\n            loading: false\n          });\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    });\n  };\n  render() {\n    const { loading, greeting } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <CenterView>\n        <Card>\n          <h1>Welcome!</h1>\n          <p>This is a simple endpoint tester, which we can use to test the api in a simple way.</p>\n          <hr/>\n          <p>You can type your name in order for server to greet you :)</p>\n          <Form onSubmit={this.handleSubmit} layout={'inline'}>\n            <Form.Item label={'Your name:'}>\n              { getFieldDecorator('name', {\n                rules: [{ required: true, message: 'Please enter a name.'}]\n              })(\n                <Input\n                  placeholder=\"Egemen\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                Greet\n              </Button>\n            </Form.Item>\n          </Form>\n          { greeting ? <div>\n            <hr/>\n            <p>{greeting}</p>\n          </div> : null }\n        </Card>\n      </CenterView>\n    )\n  }\n}\n\nexport default Form.create({ name: 'sample_form' })(Sample);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from \"antd\";\nimport { getInvitationState, createInvitation, answerToInvitation } from '../../../Api/Invitation';\n\nconst InvitationButton = ({sourceId, receiverId}) => {\n  const msgs = {\n    ready: \"Send Invite\",\n    loading: \"Loading\",\n    pending: \"Pending\",\n    accept: \"Accept?\",\n    connected: \"Connected\",\n  };\n\n  const [isDisabled, setDisabled] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [message, setMessage] = useState(msgs.loading);\n\n  useEffect(() => {\n    // check state from server\n    // 1 is current user.\n    getInvitationState({userId1: sourceId, userId2: receiverId})\n      .then(res => {\n        const { data = {} } = res.data || {};\n        if (data.userId1 === sourceId && data.userId2 === receiverId) {\n          if (data.pendingRequestFromTwoToOne && data.pendingRequestFromOneToTwo) {\n            // illegal state\n            console.error(\"Concurrent pendings.\")\n          } else if (data.startedConversation) {\n            setMessage(msgs.connected);\n            setDisabled(true);\n          } else if (data.pendingRequestFromTwoToOne) {\n            // Acceptable state\n            setMessage(msgs.accept);\n            setDisabled(false);\n          } else if (data.pendingRequestFromOneToTwo) {\n            // Pending state\n            setMessage(msgs.pending);\n            setDisabled(true);\n          } else {\n            // Ready state\n            setMessage(msgs.ready);\n            setDisabled(false);\n          }\n          setLoading(false);\n        } else {\n          // Peers do not match\n          console.error(\"Peers do not match.\");\n        }\n      }).catch(console.error);\n  }, [sourceId]);\n\n  const handleClick = e => {\n    e.preventDefault();\n    if (!isDisabled && !isLoading) {\n      setLoading(true);\n      setMessage(msgs.loading);\n      if (message === msgs.ready) {\n        createInvitation({sourceId, receiverId})\n          .then(res => {\n            // pending state\n            const { data = {} } = res.data || {};\n            setDisabled(true);\n            setLoading(false);\n            setMessage(msgs.pending);\n          })\n          .catch(console.log);\n      } else if (message === msgs.accept) {\n        // Will accept invitation\n        answerToInvitation({sourceId, receiverId, approved: true})\n          .then(res => {\n            // connected state\n            const { data = {} } = res.data || {};\n            setDisabled(true);\n            setLoading(false);\n            setMessage(msgs.connected);\n          })\n      }\n    }\n  }\n  return (\n    <Button \n      onClick={handleClick}\n      type=\"primary\"\n      loading={isLoading}\n      disabled={isDisabled}>\n        {message}\n      </Button>\n  )\n}\n\nInvitationButton.propTypes = {\n    sourceId: PropTypes.number.isRequired,\n    receiverId: PropTypes.number.isRequired,\n}\n\nexport default InvitationButton;\n","import { getRequest, postRequest } from '../base';\n\n/**\n * @function createInvitation\n * @param data ({ receiverId, sourceId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": {\n *   \"createdAt\": \"2019-11-26T00:20:43.284Z\",\n *   \"id\": 0,\n *   \"receiverId\": 0,\n *   \"sourceId\": 0\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const createInvitation = (data, extras) => postRequest('invitations/add', data, extras);\n\n/**\n * @function getInvitationState\n * @param data ({ userId1, userId2 })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": {\n *   \"pendingRequestFromOneToTwo\": true,\n *   \"pendingRequestFromTwoToOne\": true,\n *   \"startedConversation\": true,\n *   \"userId1\": 0,\n *   \"userId2\": 0\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const getInvitationState = (data, extras) => getRequest('invitations/state', data, extras);\n\n/**\n * @function answerToInvitation\n * @param data ({ approved, receiverId, sourceId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": {\n *   \"id\": 0,\n *   \"lastUpdatedAt\": \"2019-11-26T01:01:41.278Z\",\n *   \"userIdOne\": 0,\n *   \"userIdTwo\": 0\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const answerToInvitation = (data, extras) => postRequest('invitations/answer', data, extras);\n\n\n/**\n * @function getInvitationsOf\n * @param data ({ userId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": [\n    {\n      \"email\": \"string\",\n      \"firstName\": \"string\",\n      \"grades\": [\n        0\n      ],\n      \"languages\": [\n        \"string\"\n      ],\n      \"lastName\": \"string\",\n      \"progressLevels\": [\n        0\n      ],\n      \"rating\": 0,\n      \"userId\": 0\n    }\n  ],\n */\nexport const getInvitationsOf = (data, extras) => getRequest('invitations/byReceiverId', data, extras);\n","const delay = (ms) =>\n  new Promise((resolve, reject) =>\n      setTimeout(() => {\n        resolve();\n      }, ms));\n\nexport default delay;","const avatarUrl = (userId, size) => `https://api.adorable.io/avatars/${size}/${userId}`;\n\nexport default avatarUrl;","import React, {useEffect, useState} from 'react';\nimport {Descriptions, Button, Rate, Avatar} from \"antd\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nimport { numGradeToStrGrade } from '../../../Helpers/grades';\nimport InvitationButton from './InvitationButton';\nimport { connect } from './../../../Store';\nimport delay from \"../../../Helpers/delay\";\nimport avatarUrl from \"../../../Helpers/avatar\";\n\n\nconst UserView = ({ store,\n  firstName, grades, userId,\n  languages, lastName, progressLevels,\n  isButtonPresent = false }) => {\n\n  const [rate, setRate] = useState(0);\n  useEffect(() => {\n    delay(1200).then(response => {\n      const value = 3.7;\n      const new_rate = Math.round(value*2) / 2;\n      setRate(new_rate)\n    });\n  }, [userId]);\n\n  const languagesTuple = languages.map((lang, i) => (\n    [lang, grades[i], progressLevels[i]]\n  ));\n\n  return (\n    <>\n      <Descriptions title=\"User Info\"  column={isButtonPresent ? 4 : undefined}>\n        <Descriptions.Item>\n          <Avatar src={avatarUrl(userId, 60)} alt=\"Avatar\" size={60} />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Full Name\" className={\"capitalize-text\"}>\n          {[firstName, lastName].join(' ')}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Rating\">\n          <Rate allowHalf disabled value={rate} />\n        </Descriptions.Item>\n        { store.userId !== userId ?\n          <Descriptions.Item>\n            <Link to={`/users/${userId}`}>\n              <InvitationButton sourceId={store.userId} receiverId={userId}/>\n            </Link>\n          </Descriptions.Item> : null }\n        {isButtonPresent ? \n        <Descriptions.Item>\n          <Link to={`/users/${userId}`}>\n            <Button type=\"primary\">Go to profile page!</Button>\n          </Link>\n        </Descriptions.Item> : null }\n      </Descriptions>\n\n      { languagesTuple.length ? languagesTuple.map( tuple => \n        <Descriptions title={tuple[0]} key={tuple[0]}>\n          <Descriptions.Item label=\"Grade\">\n            {numGradeToStrGrade(tuple[1])}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Progress Level\">\n            {tuple[2]}\n          </Descriptions.Item>\n        </Descriptions>\n      ) : <p>No languages found.</p> }\n    </>\n  );\n}\n\nUserView.propTypes = {\n  userId: PropTypes.number.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  email: PropTypes.string,\n  languages: PropTypes.arrayOf(PropTypes.string).isRequired,\n  grades: PropTypes.arrayOf(PropTypes.number).isRequired,\n  progressLevels: PropTypes.arrayOf(PropTypes.number).isRequired,\n  isButtonPresent: PropTypes.bool,\n  rating: PropTypes.number\n};\n\nUserView.defaultProps = {\n  isButtonPresent: false,\n}\n  \nexport default connect(UserView);\n","import React, {useEffect, useState} from 'react';\nimport { Button, Form, Input } from \"antd\";\n\nimport {connect} from '../../../Store';\nimport {commentAdd} from \"../../../Api/Comment\";\n\n\nconst CommentInput = ({ store: { userId }, toUser, onSubmit }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [content, setContent] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (!content) {\n      return\n    }\n    setIsLoading(true);\n    commentAdd({ content, receiverId: toUser, sourceId: userId })\n      .then(res => {\n        setIsLoading(false);\n        setContent(\"\");\n        onSubmit();\n      })\n  };\n\n  const handleChange = e => {\n    setContent(e.target.value);\n  };\n\n  return (\n    <Input.Search\n      placeholder=\"Your comment...\"\n      onSearch={handleSubmit}\n      size=\"large\"\n      enterButton=\"Comment\"\n      loading={isLoading}\n      onChange={handleChange}\n      onPressEnter={handleSubmit}\n      value={content}\n    />\n  );\n};\n\nexport default connect(CommentInput);","import {getRequest, postRequest} from '../base';\n\n/**\n * @function commentAdd\n * @param data ({ content, receiverId, sourceId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": {\n *   \"content\": \"string\",\n *   \"receiverId\": 0,\n *   \"sourceId\": 0,\n *  },\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const commentAdd = (data, extras) => postRequest('comments', data, extras);\n\n/**\n * @function commentsGet\n * @param data ({ userId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n *  \"data\": [{\n      \"comment\": {\n        \"content\": \"string\",\n        \"createdAt\": \"2019-12-24T00:32:24.496Z\",\n        \"id\": 0,\n        \"receiverId\": 0,\n        \"sourceId\": 0\n      },\n      \"sourceFirstName\": \"string\",\n      \"sourceLastName\": \"string\"\n    },],\n *  \"explanation\": \"string\",\n *  \"status\": 0\n * }\n */\nexport const commentsGet = (data, extras) => getRequest('comments/getCommentsByReceiverId', data, extras);","import React, {useEffect, useState} from 'react';\nimport {Avatar, Card, Comment, List, Skeleton, Text, Title} from \"antd\";\n\nimport {connect} from '../../../Store';\nimport avatarUrl from \"../../../Helpers/avatar\";\nimport moment from \"moment\";\nimport CommentInput from \"./CommentInput\";\nimport {commentsGet} from \"../../../Api/Comment\";\n\n/*\nconst data = [\n  {\n    comment: {\n      content: \"Comment text here.\",\n      createdAt: \"2019-12-23T23:35:31.872Z\",\n      id: 123,\n      receiverId: 23,\n      sourceId: 34,\n    },\n    sourceFirstName: \"Arda\",\n    sourceLastName: \"Soyadı\",\n  },\n  {\n    comment: {\n      content: \"Comment text here.\",\n      createdAt: \"2019-12-23T23:36:31.872Z\",\n      id: 124,\n      receiverId: 25,\n      sourceId: 54,\n    },\n    sourceFirstName: \"Egemen\",\n    sourceLastName: \"Göl\",\n  },\n];\n*/\n\nconst CommentsView = ({store: { userId }, ofUser}) => {\n  const [comments, setComments] = useState([]);\n\n  const getComments = () => {\n    commentsGet({ userId: ofUser })\n      .then(res => {\n        const { data = [] } = res.data || [];\n        setComments(data.map(o => ({\n          author: <a href={`/users/${o.comment.sourceId}`}>{o.sourceFirstName} {o.sourceLastName}</a>,\n          avatar: <Avatar src={avatarUrl(o.comment.sourceId, 32)} alt=\"avatar\" size={32} />,\n          content: o.comment.content,\n          datetime: moment(o.comment.createdAt).fromNow(),\n          id: o.comment.id,\n        })));\n      })\n  };\n\n  useEffect(() => {\n    getComments();\n  }, [userId]);\n\n  const handleSubmit = () => {\n    getComments();\n  };\n\n  return (\n    <Card title=\"Comments\" style={{\n      maxWidth: 740,\n      width: \"calc(90% - 40px)\",\n      margin: 10,\n\n    }}>\n      <List\n        className=\"comment-list\"\n        header={`${comments.length} comments`}\n        itemLayout=\"horizontal\"\n        dataSource={comments}\n        renderItem={item => (\n          <li key={item.id}>\n            <Comment\n              {...item}\n            />\n          </li>\n        )}\n      />\n      <Comment avatar={\n        <Avatar src={avatarUrl(userId, 32)} size={32} alt=\"avatar\" />\n      } content={\n        <CommentInput toUser={ofUser} onSubmit={handleSubmit} />\n      } />\n    </Card>\n  )\n};\n\nexport default connect(CommentsView)","import React, {useEffect, useState} from 'react';\nimport { Rate } from \"antd\";\n\nimport {connect} from '../../../Store';\nimport {addRating, getRatingBetween, updateRating} from \"../../../Api/Rate\";\n\n\nconst RateUser = ({ store: { userId }, otherUserId }) => {\n\n  const [value, setValue] = useState(0);\n  const [disabled, setDisabled] = useState(true);\n\n  useEffect(() => {\n    setDisabled(true);\n    getRatingBetween({receiverId: otherUserId, senderId: userId })\n      .then(res => {\n        const {data = {}} = res.data || {};\n        setValue(data);\n        setDisabled(false);\n      }).catch();\n  }, [userId]);\n\n  const handleChange = cur => {\n    setDisabled(true);\n    if (value === 0) {\n      addRating({receiverId: otherUserId, senderId: userId, rating: cur})\n        .then(res => {\n          const {data = {}} = res.data || {};\n          setValue(data);\n          setDisabled(false);\n        });\n    } else {\n      updateRating({receiverId: otherUserId, senderId: userId, rating: cur})\n        .then(res => {\n          const {data = {}} = res.data || {};\n          setValue(data);\n          setDisabled(false);\n        });\n    }\n  };\n\n  return (\n    <Rate value={value} onChange={handleChange} disabled={disabled}/>\n  );\n}\n\nexport default connect(RateUser);","import {getRequest, postRequest} from \"../base\";\n\n/**\n * @function addRating\n * @param data ({ rating, receiverId, senderId })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {\n  \"data\": {\n    \"rating\": 0,\n    \"receiverId\": 0,\n    \"senderId\": 0\n  },\n  \"explanation\": \"string\",\n  \"status\": 0\n}\n */\nexport const addRating = (data, extras) => postRequest('ratings', data, extras);\n\n/**\n * @function getRatingBetween\n * @param data ({ receiverId, senderId })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {{\n  \"data\": 0,\n  \"explanation\": \"string\",\n  \"status\": 0\n}\n  \"explanation\": \"string\",\n  \"status\": 0\n}\n */\nexport const getRatingBetween = (data, extras) => getRequest('ratings/fromAtoB', data, extras);\n\n/**\n * @function updateRating\n * @param data ({ receiverId, senderId, rating })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {\n  \"data\": 0,\n  \"explanation\": \"string\",\n  \"status\": 0\n}\n */\nexport const updateRating = (data, extras) => postRequest('ratings/update', data, extras);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport {Card, Layout, Skeleton} from \"antd\";\n\nimport { connect, storeType } from '../../../Store';\nimport { getProfileInfoByUserId } from '../../../Api/User';\nimport \"./index.css\";\nimport UserView from '../UserView';\nimport CommentsView from \"./CommentsView\";\nimport RateUser from \"./RateUser\";\n\nconst UserProfile = ({ store }) => {\n  const params = useParams();\n  const paramUserId = params.userId;\n  let userId = store.userId;\n  if (paramUserId) {\n    userId = paramUserId;\n  }\n  const [profile, setProfile] = useState();\n\n  const updateProfile = () => {\n    getProfileInfoByUserId(userId)\n      .then((response) => {\n        const { data = {} } = response.data || {};\n        setProfile(data);\n      })\n      .catch(console.log);\n  }\n\n  useEffect(() => {\n    if (userId) {\n      updateProfile();\n    }\n  }, [userId]);\n\n  const handleRate = () => {\n    updateProfile();\n  }\n\n  return (\n    <Layout style={styles.layout}>\n      <Card title=\"Profile Page\" style={styles.card}>\n        <Skeleton loading={!profile} title={true} active>\n          <UserView {...profile} />\n        </Skeleton>\n      </Card>\n\n      { store.userId !== params.userId ?\n        <Card style={styles.card}>\n          { profile ?\n            <span>Rate this user: <br/> <RateUser otherUserId={paramUserId} onSubmit={handleRate}/></span>\n            : null }\n        </Card> : null }\n\n\n      <CommentsView ofUser={paramUserId} />\n\n    </Layout>\n  );\n};\n\nUserProfile.propTypes = {\n  store: storeType\n};\n\nconst styles = {\n  layout: {\n    height: '100%',\n    alignItems: 'center',\n    overflow: \"auto\",\n    padding: 16,\n  },\n  card: {\n    maxWidth: 740,\n    width: \"calc(90% - 40px)\",\n    margin: 10,\n  }\n};\n\nexport default connect(UserProfile);\n\n\n","import { Form, Icon, Input, Button, Select, Row } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nimport { connect, storeType } from '../../../Store';\nimport { getProfileInfoByUserId } from '../../../Api/User';\nimport { numGradeToStrGrade } from '../../../Helpers/grades';\nimport { CenterView } from '../../../Layouts/index';\n\nconst { Option } = Select;\n\nconst Search = ({ onSubmit, form }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    })\n  }\n\n  const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = form;\n\n  return (\n    <Form layout=\"inline\" onSubmit={handleSubmit}>\n      <Form.Item>\n        {getFieldDecorator('firstName', { initialValue: \"\" })(\n          <Input placeholder=\"All First Names\" label=\"First Name\" />\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('lastName', { initialValue: \"\" })(\n          <Input placeholder=\"All Last Names\" label=\"Last Name\" />\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('grade', { initialValue: 0 })(\n          <Select\n            title=\"Grade\"\n            style={{width: 120}}\n          >\n            <Option value={0}>All Grades</Option>\n            <Option value={1}>A1</Option>\n            <Option value={2}>A2</Option>\n            <Option value={3}>B1</Option>\n            <Option value={4}>B2</Option>\n            <Option value={5}>C1</Option>\n            <Option value={6}>C2</Option>\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('languageId', { initialValue: '' })(\n          <Select\n            label=\"Language\"\n            style={{width: 160}}\n          >\n            <Option value=''>All Languages</Option>\n            <Option value='1'>English</Option>\n            <Option value='2'>Turkish</Option>\n            <Option value='3'>Italian</Option>\n          </Select>\n        )}\n      </Form.Item>\n      <Button type=\"primary\" htmlType=\"submit\">\n        Search\n      </Button>\n    </Form>\n  );\n}\n\nexport default Form.create({name: 'inline_login'})(Search);","import React, { useState } from 'react';\nimport { Row, Col, Card } from 'antd';\n\nimport { connect } from '../../../Store';\nimport InlineSearch from './Search';\nimport { search } from '../../../Api/User';\nimport UserView from '../UserView';\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n\n  const handleSearch = (values) => {\n    console.log(values);\n    search(values)\n      .then( res => {\n        const { data = [] } = res.data || [];\n        setUsers(data);\n      })\n      .catch(console.log)\n  }\n  return (\n    <Card style={styles.card} bodyStyle={styles.innerCard}>\n      <InlineSearch onSubmit={handleSearch}/>\n      {users.map(user => (\n        <Card key={user.userId}>\n          <UserView {...user} isButtonPresent />\n        </Card>\n      ))}\n    </Card>\n  )\n}\n\nconst styles = {\n  card: {\n    padding: 20,\n    margin: 20,\n    height: \"calc(100% - 40px)\",\n  },\n  innerCard: {\n    overflow: \"auto\",\n    maxHeight: \"100%\",\n  }\n}\n\nexport default connect(Users);\n","import React, {createRef, useEffect, useState} from 'react';\nimport { MessageList, Input } from 'react-chat-elements';\nimport moment from 'moment';\nimport { Layout, Button } from 'antd';\nimport { scroller, Element, Events } from \"react-scroll\";\n\nimport { connect, storeType } from '../../../Store';\nimport { getChatBetween, createMessage } from '../../../Api/Chat';\nimport \"./index.css\";\n\n\n\nconst Chat = ({ store: { userId }, otherUserId }) => {\n  const [msgs, setMsgs] = useState([])\n\n  const handleChatResponse = (response) => {\n    const { data = {} } = response.data || {};\n    setMsgs(data.map(msg => ({\n      id: msg.id,\n      position: (msg.sourceId === userId ? 'right' : 'left'),\n      type: \"text\",\n      text: msg.content,\n      dateString: moment(msg.createdAt).fromNow(),\n    })));\n\n    (new Promise((resolve, reject) => {\n\n      Events.scrollEvent.register('end', () => {\n        resolve();\n        Events.scrollEvent.remove('end');\n      });\n\n      scroller.scrollTo('contentScrollable', {\n        duration: 800,\n        delay: 0,\n        smooth: 'easeInOutQuart'\n      });\n\n    })).then(() => {\n      scroller.scrollTo(\"scroll-to-bottom\", {\n        duration: 1500,\n        delay: 100,\n        smooth: true,\n        containerId: 'contentScrollable',\n        offset: 50, // Scrolls to element + 50 pixels down the page\n      });\n    });\n  }\n\n  useEffect(() => {\n    if (otherUserId) {\n      getChatBetween({userId1: userId, userId2: otherUserId})\n        .then((response) => {\n          handleChatResponse(response);\n        })\n        .catch(console.log);\n      }\n  }, [otherUserId, userId]);\n\n  const inputRef = createRef();\n  const [input, setInput] = useState(\"\");\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (input !== \"\" && !inputDisabled) {\n      setInputDisabled(true)\n\n      if(inputRef.current) {\n        inputRef.current.clear();\n      }\n      createMessage({\n        content: input,\n        receiverId: otherUserId,\n        sourceId: userId,\n      }).then(handleChatResponse)\n      .then(() => {\n        setInputDisabled(false);\n        setInput(\"\");\n        // console.log(\"done\");\n      }).catch(e => {\n        setInputDisabled(false);\n        if(inputRef.current) {\n          inputRef.current.onChange({ target: { value: input } });\n        }\n        console.log(\"error\", e);\n      });\n    }\n  };\n\n  return (\n    <Layout style={{height: '100%'}}>\n      { otherUserId && <>\n      <Layout.Content id=\"contentScrollable\" style={{ overflow: 'auto', position: 'relative' }}>\n        <MessageList className='message-list'\n          lockable={true}\n          toBottomHeight={'100%'}\n          dataSource={msgs} />\n        <Element id=\"scroll-to-bottom\" />\n      </Layout.Content>\n      <Layout.Footer >\n        <form onSubmit={handleSubmit}>\n        <Input\n          ref={(ref) => {if(ref)inputRef.current = ref}}\n          autofocus=\"true\"\n          onChange={handleChange}\n          placeholder=\"Type here...\"\n          rightButtons={\n              <Button\n                disabled={inputDisabled}\n                type=\"primary\"\n                htmlType={\"submit\"}\n                >Send</Button>} />\n        </form>\n      </Layout.Footer></>\n    }\n    </Layout>\n  );\n}\n\n\nexport default connect(Chat);\n\n\n","import {getRequest, postRequest} from '../base';\n\n/**\n * @function getMessagesByUserId\n * @param data ({ userId })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * [\n *  {\n *   \"content\": \"string\",\n *   \"createdAt\": \"2019-11-26T02:10:48.077Z\",\n *   \"id\": 0,\n *   \"receiverId\": 0,\n *   \"sourceId\": 0\n *  }\n * ]\n */\nexport const getMessagesByUserId = (userId, extras) => getRequest('messages', { userId }, extras);\n\n/**\n * @function createMessage\n * @param data ({ content, receiverId, sourceId })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * [\n *  {\n *   \"content\": \"string\",\n *   \"createdAt\": \"2019-11-26T02:12:55.702Z\",\n *   \"id\": 0,\n *   \"receiverId\": 0,\n *   \"sourceId\": 0\n *  }\n * ]\n */\nexport const createMessage = (data, extras) => postRequest('messages', data, extras);\n\n/**\n * @function getChatBetween\n * @param data ({ userId1, userId2 })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * [\n *  {\n *   \"content\": \"string\",\n *   \"createdAt\": \"2019-11-26T02:12:55.702Z\",\n *   \"id\": 0,\n *   \"receiverId\": 0,\n *   \"sourceId\": 0\n *  }\n * ]\n */\nexport const getChatBetween = (data, extras) => getRequest('messages/chat', data, extras);\n\n/**\n * @function getConversationsOf\n * @param data ({ userId })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * [\n *   {\n *     \"email\": \"string\",\n *     \"firstName\": \"string\",\n *     \"grades\": [\n *       0\n *     ],\n *     \"languages\": [\n *       \"string\"\n *     ],\n *     \"lastName\": \"string\",\n *     \"progressLevels\": [\n *       0\n *     ],\n *     \"rating\": 0,\n *     \"userId\": 0\n *   }\n * ],\n */\nexport const getConversationsOf = (userId, extras) => getRequest('conversations', {id: userId}, extras);\n","import React, {useEffect, useState} from \"react\";\n\nimport {connect} from \"../../../Store\";\nimport UserView from \"../UserView\";\nimport {getInvitationsOf} from \"../../../Api/Invitation\";\nimport { Card, Spin } from \"antd\";\n\nconst PendingPage = ({ store: { userId } }) => {\n  const [pendingUsers, setPendingUsers] = useState(null);\n\n  useEffect(() => {\n    if (userId) {\n      getInvitationsOf({userId})\n        .then(response => {\n          const { data = [] } = response.data || {};\n          setPendingUsers(data);\n        }).catch(console.log)\n    }\n  }, [userId]);\n\n  return (\n    <div style={{\n      height: \"100%\",\n      display: \"grid\",\n    }}>\n      {Array.isArray(pendingUsers)\n        ?\n        (pendingUsers.length > 0\n            ?\n            <ul>\n              {pendingUsers.map(user =>\n                <Card key={user.userId} style={styles.card}><UserView {...user} isButtonPresent/></Card>\n              )}\n            </ul>\n            :\n            <Card style={{\n              margin: \"auto\",\n            }}>\n              <div style={{fontSize: 18}}>\n                <div>No new chat invitations!</div>\n              </div>\n            </Card>\n        )\n        :\n        <Spin size={\"large\"} style={{margin: \"auto\"}}/>\n      }\n      </div>\n  );\n};\n\nconst styles = {\n  card: {\n    padding: 20,\n    margin: 20,\n  },\n};\n\n\nexport default connect(PendingPage)","import React, { useEffect, useState } from 'react';\nimport { MessageList, ChatList } from 'react-chat-elements';\nimport moment from 'moment';\nimport {Button, Layout} from 'antd';\n\nimport { connect, storeType } from '../../../Store';\nimport { getConversationsOf, getMessagesByUserId } from '../../../Api/Chat';\nimport \"./index.css\";\nimport Chat from \"./Chat\";\nimport PendingPage from \"./PendingPage\"\nimport {ColorsHelper} from \"../../../Helpers\";\n\nconst { Sider, Content } = Layout;\n\nconst AVATAR_SIZE = 40;\n\n\nconst ViewPendingsButton = ({ onClick}) => {\n    return (\n      <div style={{\n        width: \"100%\",\n        height: 72,\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingRight: 20,\n        paddingLeft: 20,\n      }}>\n        <Button\n          onClick={onClick}\n          type=\"primary\"\n          shape=\"round\"\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            backgroundColor: ColorsHelper.appColorDark,\n          }}\n        >View Pendings!</Button>\n      </div>\n    )\n};\n\n\nconst Chats = ({store: {userId}}) => {\n  const [focusUser, setFocusUser] = useState();\n  const [contactedUsers, setContactedUsers] = useState([]);\n  useEffect(() => {\n    if (userId) {\n      getConversationsOf(userId)\n        .then((response) => {\n          const {data = {}} = response.data || {};\n          setContactedUsers(data.map(user => ({\n            avatar: `https://api.adorable.io/avatars/${AVATAR_SIZE}/${user.userId}`,\n            title: `${user.firstName} ${user.lastName}`,\n            userId: user.userId,\n          })));\n        })\n        .catch(console.log);\n    }\n  }, [userId]);\n\n  const goPendingsPage = () => {\n    setFocusUser(null);\n  };\n\n  return (\n    <Layout style={{height: '100%'}}>\n      <Sider width={300} collapsedWidth={72} style={{\n        overflow: \"auto\",\n      }} theme=\"light\" collapsible>\n        <ViewPendingsButton onClick={goPendingsPage}/>\n        <ChatList\n          className=\"no-horizontal-scroll\"\n          dataSource={contactedUsers} onClick={({userId}) => setFocusUser(userId)}/>\n      </Sider>\n      <Content style={{}}>\n        { focusUser ?\n          <Chat otherUserId={focusUser}/>\n          :\n          <PendingPage />\n        }\n\n      </Content>\n    </Layout>\n  );\n}\n\n\nexport default connect(Chats);\n\n\n","import React, {useEffect, useState} from 'react';\nimport {connect} from \"../../../Store\";\nimport {Layout, Menu} from \"antd\";\nimport {getEssaysByUserId} from \"../../../Api/Essay\";\n\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n\nconst EssaysSider = ({ essays, onClick }) => {\n\n  return (\n    <Sider width={400} style={styles.sider}>\n      <Menu onClick={onClick} >\n        {essays.map(es => (\n          <Menu.Item key={es.key}>\n            {es.text}\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Sider>\n  )\n};\n\nconst styles = {\n  sider: {\n    background: '#fff',\n    height: \"100%\",\n  }\n}\n\nexport default EssaysSider;","import React, {useState} from \"react\";\nimport {addRequest} from \"../../../Api/Request\";\nimport {Button, Descriptions, List, Rate} from \"antd\";\nimport {connect} from \"../../../Store\";\n\nconst ReccomItem = ({store, userId, firstName, grade,\n                      lastName, progressLevel, rating, essayId}) => {\n  const [sent, setSent] = useState(false);\n  const [isloading, setLoading] = useState(false)\n\n  const handleClick = () => {\n    setLoading(true);\n    addRequest({ sourceId: store.userId, receiverId: userId, essayId})\n      .then(res => {\n        setSent(true);\n        setLoading(false);\n      })\n  };\n\n  return (\n    <List.Item>\n      <Descriptions\n        title=\"Recommendations\"\n        bordered\n        column={1}\n      >\n        <Descriptions.Item label=\"Name\">{firstName} {lastName}</Descriptions.Item>\n        <Descriptions.Item label=\"Rating\">\n          <Rate allowHalf disabled defaultValue={Math.round(rating*2)/2} />\n        </Descriptions.Item>\n      </Descriptions>\n      <Button\n        onClick={handleClick}\n        disabled={sent}\n        loading={isloading}\n      >{!sent ? \"Send Request for Review\" : \"Request has been sent\"}</Button>\n    </List.Item>\n  );\n};\n\nexport default connect(ReccomItem);","import {getRequest, postRequest} from \"../base\";\n\n/**\n * @function addRequest\n * @param data ({ essayId, receiverId, sourceId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n  \"data\": {\n    \"essayId\": 0,\n    \"id\": 0,\n    \"receiverId\": 0,\n    \"sourceId\": 0\n  },\n  \"explanation\": \"string\",\n  \"status\": 0\n  \"explanation\": \"string\",\n  \"status\": 0\n}\n */\nexport const addRequest = (data, extras) => postRequest('requests', data, extras);\n\n\n/**\n * @function getRequestsByUserId\n * @param userId\n * @param extras\n * @returns {Promise<AxiosResponse<T>>}\n *\n * success response\n * {\n *  \"status\": 200,\n *  \"explanation\": null,\n *  \"data\": [\n *    {\n *      \"essayId\": 19,\n *      \"username\": \"John Johnwell\",\n *      \"question\": \"Describe your childhood home.\"\n *    }\n *  ]\n *}\n */\nexport const getRequestsByUserId = (userId, extras) => getRequest('requests', { userId }, extras);","import React, {useEffect, useState} from 'react';\nimport {connect} from \"../../../Store\";\nimport {Button, Col, Descriptions, Layout, List, Modal, Rate, Row, Spin} from \"antd\";\nimport {getRecommendations} from \"../../../Api/Recommendation\";\nimport {getProfileInfoByUserId} from \"../../../Api/User\";\nimport {idToLanguage, languages} from \"../../../Helpers/languages\";\nimport UserView from \"../UserView\";\nimport {lang} from \"moment\";\nimport delay from \"../../../Helpers/delay\";\nimport {addRequest} from \"../../../Api/Request\";\n\nimport ReccomItem from \"./ReccomItem\";\n\n\n\nconst RequestReviewModal = ({ store: { userId }, visible, onOk, languageId, onCancel, essayId }) => {\n\n  const [profile, setProfile] = useState();\n  const [gradeLangs, setGradeLangs] = useState();\n  const [recs, setRecs] = useState([]);\n\n  useEffect(() => {\n    getProfileInfoByUserId(userId)\n      .then(res => {\n        const { data = {} } = res.data || {};\n        if (Object.entries(data).length !== 0 || data.constructor === Object) {\n          setProfile(data);\n        }\n      })\n  }, [userId]);\n\n  useEffect(() => {\n    if (profile &&\n      profile.hasOwnProperty(\"grades\") && Array.isArray(profile.grades) &&\n      profile.hasOwnProperty(\"languages\") && Array.isArray(profile.languages) &&\n      profile.grades.length === profile.languages.length\n    ) {\n      setGradeLangs(profile.languages.reduce((acc, x, index) => ({...acc, [x]: profile.grades[index]}), {}))\n    } else {\n      console.log(\"no grade\")\n    }\n  }, [profile]);\n\n  useEffect(() => {\n    if (gradeLangs) {\n      const grade = gradeLangs[idToLanguage(languageId)];\n      getRecommendations({grade, languageId})\n        .then(res => {\n          const { data = [] } = res.data || [];\n          setRecs(data);\n        }).catch(console.log)\n    }\n  }, [gradeLangs]);\n\n  return (\n    <Modal\n      visible={visible}\n      onOk={onOk}\n      width={600}\n      onCancel={onCancel}\n    >\n      { recs ?\n        <List>\n          { recs.map(r => (\n            <ReccomItem {...r} key={r.userId} essayId={essayId}/>\n          ))}\n        </List>\n        :\n        <Spin size=\"large\" />\n      }\n    </Modal>\n  );\n};\n\nexport default connect(RequestReviewModal)","import {postRequest} from \"../base\";\n\n/**\n * @function getRecommendations\n * @param data ({ grade, languageId })\n * @param extras\n * @return {Promise<AxiosResponse<T>>}\n * {\n  \"data\": [\n    {\n      \"email\": \"string\",\n      \"firstName\": \"string\",\n      \"grades\": [\n        0\n      ],\n      \"languages\": [\n        \"string\"\n      ],\n      \"lastName\": \"string\",\n      \"progressLevels\": [\n        0\n      ],\n      \"rating\": 0,\n      \"userId\": 0\n    }\n  ],\n  \"explanation\": \"string\",\n  \"status\": 0\n}\n */\nexport const getRecommendations = (data, extras) => postRequest('recommendations', data, extras);\n","import moment from 'moment';\n\nclass AnnotationData {\n    static motivationTypes = [\n        { value: 'assessing', label: 'Assessing' },\n        { value: 'bookmarking', label: 'Bookmarking' },\n        { value: 'classifying', label: 'Classifying' },\n        { value: 'commenting', label: 'Commenting' },\n        { value: 'describing', label: 'Describing' },\n        { value: 'editing', label: 'Editing' },\n        { value: 'highlighting', label: 'Highlighting' },\n        { value: 'identifying', label: 'Identifying' },\n        { value: 'linking', label: 'Linking' },\n        { value: 'moderating', label: 'Moderating' },\n        { value: 'questioning', label: 'Questioning' },\n        { value: 'replying', label: 'Replying' },\n        { value: 'tagging', label: 'Tagging' }\n    ];\n    static motivationTypeToMotivationObject = (() => {\n        const motivationTypesByValue = AnnotationData.motivationTypes\n            .reduce((acc, x) =>\n                ({ ...acc, [x.value]: x }), {});\n        return (value) => (motivationTypesByValue[value] || {});\n    })();\n    id = undefined;\n    userId = undefined;\n    userName = \"\";\n    userEmail = \"\";\n    body = \"\";\n    motivation = \"commenting\";\n    targetUrl = \"\";\n    targetType = \"\";\n    constructor() {\n        this.createdAt = new Date();\n        this.modifiedAt = this.createdAt;\n        if (this.constructor === AnnotationData) {\n            throw new Error('Do not use AnnotationData class directly it is abstract');\n        }\n    }\n    get motivationObject() {\n        return AnnotationData.motivationTypeToMotivationObject(this.motivation);\n    }\n    get displayTitle() {\n        return `${this.body}`;\n        /*return `${this.motivationObject.label || 'New'} ~ ${\n            moment(this.createdAt).fromNow()}`;*/\n    }\n    get displayBody() {\n        let body = `\"${this.motivationObject.label || 'New'}\" ~ ${this.userName} ~ ${this.userEmail\n        } \\n\\n created ${moment(this.createdAt).fromNow()}`;\n        if (this.modifiedAt != this.createdAt) {\n            body += `, edited on ${moment(this.modifiedAt).fromNow()}`;\n        }\n        return body;\n    }\n    setIdFromLink = (idLink) => {\n        this.id = (/(\\d+)$/.exec(idLink) || [])[1];\n    };\n    setModified = () => {\n        this.modifiedAt = new Date();\n    };\n    // fields to fill when a new annotation is initialized\n    setTarget = (targetUrl) => {\n        this.targetUrl = targetUrl;\n    };\n    setUser = ({ email, firstName, lastName, userId }) => {\n        this.userId = userId;\n        this.userName = `${firstName} ${lastName}`;\n        this.userEmail = email;\n    };\n    // fields to fill when a new annotation is prepared\n    setMessage = (message) => {\n        this.body = message;\n        this.modifiedAt = new Date();\n    };\n    setMotivation = (motivation) => {\n        this.motivation = motivation;\n        this.modifiedAt = new Date();\n    };\n    // fields to fill when a new annotation is created on backend\n    setAnnotationId = (id) => {\n        this.id = id;\n    };\n\n    toDataModel() {\n        const result = {};\n        result['@context'] = \"http://www.w3.org/ns/anno.jsonld\";\n        if(this.id) {\n            result.id = `https://api.bounswe2019group9.tk/annotations?id=${this.id}`;\n        }\n        result.type = \"Annotation\";\n        result.creator = {\n            id: `https://bounswe2019group9.tk/users/${this.userId}`,\n            type: 'Person',\n            name: this.userName,\n            email: this.userEmail\n        };\n        result.created = this.createdAt.toISOString();\n        result.modified = this.modifiedAt.toISOString();\n        result.body = {\n            type: \"TextualBody\",\n            value: this.body,\n            format: \"text/plain\"\n        };\n        result.motivation = this.motivation;\n        result.target = {};\n        return result;\n    };\n    clone() {\n        const clonedData = new this.constructor();\n        clonedData.id = this.id;\n        clonedData.userId = this.userId;\n        clonedData.userName = this.userName;\n        clonedData.userEmail = this.userEmail;\n        clonedData.body = this.body;\n        clonedData.motivation = this.motivation;\n        clonedData.targetUrl = this.targetUrl;\n        clonedData.targetType = this.targetType;\n        clonedData.createdAt = this.createdAt;\n        clonedData.modifiedAt = this.modifiedAt;\n        return clonedData;\n    };\n}\n\nexport default AnnotationData;","import AnnotationData from './AnnotationData';\n\nexport default class ImageAnnotationData extends AnnotationData {\n    // target width/height (natural is image dimension, real is displayed image dimension)\n    static naturalWidth = 1;\n    static naturalHeight = 1;\n    static realWidth = 1;\n    static realHeight = 1;\n    // annotation xywh\n    originalX = 0;\n    originalY = 0;\n    originalWidth = 1;\n    originalHeight = 1;\n\n    constructor({ displayX = 60, displayY = 30 } = {}) {\n        super();\n        this.targetType = 'image';\n        this.displayX = displayX;\n        this.displayY = displayY;\n        this.displayWidth = 60;\n        this.displayHeight = 30;\n    }\n    get displayX() {\n        return this.originalX * ImageAnnotationData.realWidth / ImageAnnotationData.naturalWidth;\n    }\n    set displayX(displayX) {\n        this.originalX = Math.round(displayX * ImageAnnotationData.naturalWidth / ImageAnnotationData.realWidth);\n    }\n    get displayY() {\n        return this.originalY * ImageAnnotationData.realHeight / ImageAnnotationData.naturalHeight;\n    }\n    set displayY(displayY) {\n        this.originalY = Math.round(displayY * ImageAnnotationData.naturalHeight / ImageAnnotationData.realHeight);\n    }\n    get displayWidth() {\n        return this.originalWidth * ImageAnnotationData.realWidth / ImageAnnotationData.naturalWidth;\n    }\n    set displayWidth(displayWidth) {\n        this.originalWidth = Math.round(displayWidth * ImageAnnotationData.naturalWidth / ImageAnnotationData.realWidth);\n    }\n    get displayHeight() {\n        return this.originalHeight * ImageAnnotationData.realHeight / ImageAnnotationData.naturalHeight;\n    }\n    set displayHeight(displayHeight) {\n        this.originalHeight = Math.round(displayHeight * ImageAnnotationData.naturalHeight / ImageAnnotationData.realHeight);\n    }\n    toDataModel() {\n        const result = super.toDataModel();\n        result.target.id = this.targetUrl;\n        result.target.type = \"Image\";\n        let ext = this.targetUrl.substr(\n            this.targetUrl.lastIndexOf('.') + 1\n        ).toLowerCase();\n        if (ext.startsWith('jpeg') || ext.startsWith('jpg')) {\n            ext = 'jpeg';\n        } else if (ext.startsWith('png')) {\n            ext = 'png';\n        } else {\n            ext = '*';\n        }\n        result.target.format = `image/${ext}`;\n        result.target.selector = {\n            type: \"FragmentSelector\",\n            conformsTo: \"http://www.w3.org/TR/media-frags/\",\n            value: `xywh=${\n                this.originalX},${\n                this.originalY},${\n                this.originalWidth},${\n                this.originalHeight}`\n        };\n        return result;\n    };\n    clone() {\n        const cloned = super.clone();\n        cloned.originalX = this.originalX;\n        cloned.originalY = this.originalY;\n        cloned.originalWidth = this.originalWidth;\n        cloned.originalHeight = this.originalHeight;\n        return cloned;\n    };\n}","import AnnotationData from \"./AnnotationData\";\n\nclass TextAnnotationData extends AnnotationData {\n    constructor({ start = 0, end = 0 } = {}) {\n        super();\n        this.targetType = 'text';\n        this.start = start;\n        this.end = end;\n    }\n    toDataModel() {\n        const result = super.toDataModel();\n\n        result.target.id = this.targetUrl;\n        result.target.type = \"Text\";\n        result.target.format = \"text/plain\";\n        result.target.selector = {\n            type: \"FragmentSelector\",\n            conformsTo: \"http://tools.ietf.org/rfc/rfc5147\",\n            value: `char=${\n                this.start},${\n                this.end\n            }`\n        };\n        return result;\n    };\n    clone() {\n        const cloned = super.clone();\n        cloned.start = this.start;\n        cloned.end = this.end;\n        return cloned;\n    }\n}\n\nexport default TextAnnotationData;","import TextAnnotationData from \"./TextAnnotationData\";\nimport ImageAnnotationData from \"./ImageAnnotationData\";\n\nclass AnnotationDataFactory {\n    static fromDataModel = (annotation) => {\n        let annotationData;\n        if (annotation.target.type === 'Image') {\n            annotationData = new ImageAnnotationData();\n            const [x,y,width,height] = annotation.target.selector.value.substr(5).split(',');\n            annotationData.originalX = parseInt(x, 10);\n            annotationData.originalY = parseInt(y, 10);\n            annotationData.originalWidth = parseInt(width, 10);\n            annotationData.originalHeight = parseInt(height, 10);\n        } else if (annotation.target.type === 'Text') {\n            annotationData = new TextAnnotationData();\n            const [start, end] = annotation.target.selector.value.substr(5).split(',');\n            annotationData.start = parseInt(start, 10);\n            annotationData.end = parseInt(end, 10);\n        } else {\n            throw new Error('Unknown annotation target type, must be \"Image\" or \"Text\"');\n        }\n        annotationData.id = (/(\\d+)$/.exec(annotation.id) || [])[1];\n        annotationData.userId = parseInt((/(\\d+)$/.exec(annotation.creator.id) || [])[1], 10);\n        annotationData.userName = annotation.creator.name;\n        annotationData.userEmail = annotation.creator.email;\n        annotationData.createdAt = new Date(annotation.created);\n        annotationData.modifiedAt = new Date(annotation.modified);\n        annotationData.body = annotation.body.value;\n        annotationData.motivation = annotation.motivation;\n        annotationData.targetUrl = annotation.target.id;\n        return annotationData;\n    };\n}\n\nexport default AnnotationDataFactory;\nexport const fromDataModel = AnnotationDataFactory.fromDataModel;","import React, {useState} from 'react';\nimport {EditableAnnotation, SubjectRect, ConnectorElbow, ConnectorEndDot, Note} from 'react-annotation';\nimport { connect } from \"../../../../Store\";\n\nconst ImageAnnotation = ({ annotation, isOwner, onSaveAnnotation, setEditingAnnotation }) => {\n\n    const [location, setLocation] = useState({});\n    const [isDragging, setIsDragging] = useState(false);\n\n    const title = annotation.displayTitle;\n\n    const body = annotation.displayBody;\n\n    const x = annotation.displayX;\n\n    const y = annotation.displayY;\n\n    const width = -annotation.displayWidth;\n\n    const height = -annotation.displayHeight;\n\n    const handleDragEnd = (nextProps) => {\n        setTimeout(() => {\n            setIsDragging(false);\n        }, 10)\n        const difference = [nextProps.x - (x-width), nextProps.y - (y-height), nextProps.width - width, nextProps.height - height]\n            .map((x) => Math.abs(x))\n            .reduce((a, b) => a + b);\n        if (difference > 0.1) {\n            annotation.displayX = nextProps.x + nextProps.width;\n            annotation.displayY = nextProps.y + nextProps.height;\n            annotation.displayWidth = -nextProps.width;\n            annotation.displayHeight = -nextProps.height;\n            const nextAnnotation = annotation.clone();\n            nextAnnotation.setModified();\n            onSaveAnnotation(annotation, nextAnnotation);\n        }\n        setLocation({ dx: nextProps.dx, dy: nextProps.dy });\n    };\n\n    const handleDragStart = () => {\n        setIsDragging(true);\n    };\n\n    const handleToggle = (...args) => {\n        if (!isOwner || isDragging) {\n            return;\n        }\n        setEditingAnnotation(annotation);\n    };\n\n    return (\n        <EditableAnnotation\n            x={x - width}\n            y={y - height}\n            dx={40}\n            dy={20 -height/2}\n            color={\"#9610ff\"}\n            className=\"show-bg no-select clickable\"\n            events={{\n                onClick: handleToggle\n            }}\n            onDragStart={handleDragStart}\n            onDragEnd={handleDragEnd}\n            width={width}\n            height={height}\n            {...location}\n        >\n            <SubjectRect fill={\"ddddff\"} fillOpacity={0.4} editMode={isOwner} />\n            <ConnectorElbow>\n                <ConnectorEndDot />\n            </ConnectorElbow>\n\n            <Note\n                align={\"middle\"}\n                orientation={\"topBottom\"}\n                bgPadding={20}\n                wrap={240}\n                padding={15}\n                titleColor={\"rgb(12, 54, 11)\"}\n                labelColor={'#1690ff'}\n                lineType={\"vertical\"}\n                title={title}\n                label={body}\n            />\n        </EditableAnnotation>\n    );\n};\n\nexport default ImageAnnotation;","import {withContentRect} from \"react-measure\";\nimport React, {createRef, useEffect, useReducer, useState} from \"react\";\nimport ImageAnnotationData from \"../AnnotationData/ImageAnnotationData\";\nimport AnnotationDataFactory from \"../AnnotationData/AnnotationDataFactory\";\nimport ImageAnnotation from './ImageAnnotation';\n\nconst ImageAnnotationContainer =\n    ({ measureRef, contentRect, source, annotations, dispatch, user, onSaveAnnotation, setEditingAnnotation }) => {\n        const { width: realWidth, height: realHeight, left, top } = contentRect.bounds;\n        ImageAnnotationData.realWidth = realWidth;\n        ImageAnnotationData.realHeight = realHeight;\n\n        const [imageReady, setImageReady] = useState(false);\n\n        const updateNaturalDimensions = (imageRef) => {\n            if (imageRef) {\n                const handleImageLoad = () => {\n                    ImageAnnotationData.naturalWidth = imageRef.naturalWidth || realWidth;\n                    ImageAnnotationData.naturalHeight = imageRef.naturalHeight || realHeight;\n                    imageRef.removeEventListener('load', handleImageLoad);\n                    setImageReady(true);\n                    console.log('hulog');\n                };\n                imageRef.addEventListener('load', handleImageLoad);\n            }\n        };\n\n        const handleAddAnnotation = (e) => {\n            const { clientX, clientY } = e;\n            const annotation = new ImageAnnotationData({ displayX: clientX - left, displayY: clientY - top });\n            annotation.setUser(user);\n            annotation.setTarget(source);\n            dispatch({ type: 'newAnnotation', data: [...annotations, annotation] });\n        };\n\n        return (\n            <div ref={measureRef} style={styles.container}>\n                <img\n                    src={source}\n                    ref={updateNaturalDimensions}\n                    title=\"Essay\"\n                    alt=\"Essay\"\n                    onClick={handleAddAnnotation}\n                />\n                { imageReady ? (\n                    <svg style={styles.annotationContainer} width={1} height={1}>\n                        { annotations.map((annotation, index) => (\n                            <ImageAnnotation\n                                key={annotation.id || `anno_${index}`}\n                                annotation={annotation}\n                                isOwner={annotation.userId === user.userId}\n                                onSaveAnnotation={onSaveAnnotation}\n                                setEditingAnnotation={setEditingAnnotation}\n                            />\n                        )) }\n                    </svg>\n                ) : null}\n            </div>\n        );\n    };\n\nconst styles = {\n    container: {\n        position: 'relative'\n    },\n    image: {\n        maxWidth: '100%'\n    },\n    annotationContainer: {\n        position: 'absolute',\n        overflow: 'visible',\n        top: 0,\n        left: 0,\n        zIndex: 100,\n    }\n};\n\nexport default withContentRect('bounds')(ImageAnnotationContainer);","import React, {createRef, useEffect, useState} from 'react';\nimport {EditableAnnotation, SubjectCircle, ConnectorElbow, ConnectorEndDot, Note} from 'react-annotation';\n\nimport { connect } from \"../../../../Store\";\n\nconst TextAnnotation = ({ store: { userId }, annotation, setEditingAnnotation }) => {\n\n    const [location, setLocation] = useState({});\n    const [isDragging, setIsDragging] = useState(false);\n\n    const isOwner = userId === annotation.userId;\n\n    const title = annotation.displayTitle;\n\n    const body = annotation.displayBody;\n\n    const handleDragEnd = (nextProps) => {\n        setTimeout(() => {\n            setIsDragging(false);\n        }, 10);\n        setLocation({ dx: nextProps.dx, dy: nextProps.dy });\n    };\n\n    const handleToggle = (a,b,e) => {\n        if (!isOwner || isDragging) {\n            return;\n        }\n        setEditingAnnotation(annotation);\n    };\n\n    const handleDragStart = () => {\n        setIsDragging(true);\n    };\n\n    const catchMouseUp = (a, b, e) => {\n        e.stopPropagation();\n    };\n\n    return (\n        <span style={styles.container}>\n            <svg style={styles.svg} width={1} height={1}>\n                <EditableAnnotation\n                    x={0}\n                    y={10}\n                    dx={70}\n                    dy={40}\n                    color={\"#9610ff\"}\n                    className=\"show-bg no-select clickable\"\n                    events={{\n                        onClick: handleToggle,\n                        onMouseUp: catchMouseUp\n                    }}\n                    onDragStart={handleDragStart}\n                    onDragEnd={handleDragEnd}\n                    {...location}\n                >\n                    <ConnectorElbow>\n                        <ConnectorEndDot />\n                    </ConnectorElbow>\n\n                    <Note\n                      align={\"middle\"}\n                      orientation={\"topBottom\"}\n                      bgPadding={20}\n                      wrap={240}\n                      padding={15}\n                      titleColor={\"rgb(12, 54, 11)\"}\n                      labelColor={'#1690ff'}\n                      lineType={\"vertical\"}\n                      title={title}\n                      label={body}\n                    >\n                        <text>\n                            hello\n                        </text>\n                    </Note>\n                </EditableAnnotation>\n            </svg>\n        </span>\n    );\n};\n\nconst styles = {\n    container: {\n        position: 'relative'\n    },\n    svg: {\n        position: 'absolute',\n        overflow: 'visible',\n        zIndex: 100\n    }\n};\n\nexport default connect(TextAnnotation);","import React, {useEffect, useReducer, useState} from 'react';\nimport {TextAnnotator} from \"react-text-annotate-ev\";\nimport TextAnnotation from './TextAnnotation';\nimport TextAnnotationData from \"../AnnotationData/TextAnnotationData\";\n\n\nconst TextAnnotationContainer = ({ source, annotations, dispatch, user, targetUrl, setEditingAnnotation }) =>  {\n\n    const handleRemoveAnnotation = (annotation) => {\n        dispatch({ type: 'removeAnnotation', data: annotation });\n    };\n\n    const handleAddAnnotation = (nextAnnotations) => {\n        if (nextAnnotations.length > annotations.length) {\n            dispatch({ type: 'newAnnotation', data: nextAnnotations });\n        }\n    };\n\n    const getNewAnnotation = ({ start, end }) => {\n        const annotation = new TextAnnotationData({ start, end });\n        annotation.setUser(user);\n        annotation.setTarget(targetUrl);\n        annotation.tag = (\n            <TextAnnotation\n                annotation={annotation}\n                onRemoveAnnotation={handleRemoveAnnotation}\n                setEditingAnnotation={setEditingAnnotation}\n            />\n        );\n        return annotation;\n    };\n\n    return (\n        <div style={styles.container}>\n            <TextAnnotator\n              style={{ lineHeight: 1.5 }}\n              content={source}\n              value={annotations}\n              onChange={handleAddAnnotation}\n              getSpan={getNewAnnotation}\n            />\n        </div>\n    );\n\n};\n\nconst styles = {\n    container: {\n        margin: 32,\n        padding: 16,\n        backgroundColor: '#fff',\n        border: '1px solid #000'\n    }\n};\n\nexport default TextAnnotationContainer;","import React, {useEffect, useReducer, useState} from 'react';\nimport { Modal, Form, Input, Select, Button, Popconfirm, Icon } from \"antd\";\nimport AnnotationData from \"./AnnotationData/AnnotationData\";\n\nconst AnnotationModal = ({ annotation, form, setEditingAnnotation, onSaveAnnotation, onRemoveAnnotation }) => {\n    const [state, dispatch] = useReducer((prevState, action) => {\n        switch (action.type) {\n            case 'reinitialize':\n                return {\n                    message: action.data.body,\n                    motivation: action.data.motivation,\n                    loading: false,\n                };\n            case 'loading':\n                return {\n                    loading: true\n                };\n            case 'loaded':\n                return {\n                    loading: false\n                };\n            default:\n                return prevState;\n        }\n    }, { message: '', motivation: AnnotationData.motivationTypes[0], loading: false });\n\n\n    useEffect(() => {\n        if (annotation) {\n            dispatch({ type: 'reinitialize', data: annotation });\n            form.resetFields();\n        }\n    }, [annotation]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n            const { message, motivation } = values;\n            const nextAnnotation = annotation.clone();\n            nextAnnotation.setMessage(message);\n            nextAnnotation.setMotivation(motivation);\n            dispatch({ type: 'loading' });\n            onSaveAnnotation(annotation, nextAnnotation)\n            /*.then(() => {\n                setEditingAnnotation(null);\n            }).catch((err) => {\n\n            })*/.finally(() => {\n                dispatch({ type: 'loaded' });\n            })\n        })\n    };\n\n    const handleDelete = (e) => {\n        e.preventDefault();\n        onRemoveAnnotation(annotation);\n\n    };\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        if (!state.loading) {\n            if (!annotation.id) {\n                onRemoveAnnotation(annotation);\n            } else {\n                setEditingAnnotation(null);\n            }\n        }\n    };\n\n    return (\n\n      <Modal\n          title=\"Annotate Essay\"\n          visible={!!annotation}\n          onOk={handleSubmit}\n          onCancel={handleCancel}\n          footer={[\n              <Popconfirm\n                  key=\"delete\"\n                  title=\"Are you sure you want to delete this annotation？\"\n                  icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\n                  onConfirm={handleDelete}\n              >\n                  <Button type=\"danger\" disabled={state.loading}>\n                      Delete\n                  </Button>,\n              </Popconfirm>,\n              <Button key=\"back\" onClick={handleCancel} disabled={state.loading}>\n                  Close\n              </Button>,\n              <Button key=\"submit\" onClick={handleSubmit} type=\"primary\" loading={state.loading}>\n                  Save\n              </Button>\n          ]}\n      >\n        <Form layout='vertical' onSubmit={handleSubmit}>\n            <Form.Item label=\"Motivation\">\n                {form.getFieldDecorator('motivation', {\n                    initialValue: state.motivation,\n                    rules: [\n                        { required: true, message: 'Please select a motivation' }\n                    ]\n                })(\n                    <Select>\n                        {\n                            AnnotationData.motivationTypes\n                                .map(({ label, value }) => (\n                              <Select.Option value={value} key={value}>\n                                  {label}\n                              </Select.Option>\n                            ))\n                        }\n                    </Select>\n                )}\n            </Form.Item>\n            <Form.Item label=\"Message\">\n                {form.getFieldDecorator('message', {\n                    initialValue: state.message,\n                    rules: [\n                        { required: true, message: 'Please enter a message' }\n                    ]\n                })(\n                    <Input.TextArea\n                        placeholder=\"Enter your message\"\n                        autoSize={{ minRows: 2, maxRows: 6 }}\n                    />\n                )}\n            </Form.Item>\n        </Form>\n      </Modal>\n    );\n};\n\nexport default Form.create({ name: 'annotation_form' })(AnnotationModal);","import React, {createRef, useEffect, useReducer, useState} from 'react';\n\nimport ImageAnnotationContainer from \"./ImageAnnotation/ImageAnnotationContainer\";\nimport TextAnnotationContainer from \"./TextAnnotation/TextAnnotationContainer\";\n\nimport { connect } from \"../../../Store\";\nimport {getProfileInfoByUserId} from \"../../../Api/User\";\nimport AnnotationDataFactory from \"./AnnotationData/AnnotationDataFactory\";\nimport AnnotationModal from \"./AnnotationModal\";\nimport TextAnnotation from \"./TextAnnotation/TextAnnotation\";\n\nimport './index.css';\nimport {createAnnotation, deleteAnnotationById, searchAnnotations, updateAnnotation} from \"../../../Api/Annotation\";\nimport {getEssayById} from \"../../../Api/Essay\";\n\nconst AnnotationContainer = ({ essay, store: { userId } }) => {\n    const [profile, setProfile] = useState();\n    useEffect(() => {\n        console.log('userId', userId);\n        if (userId) {\n            getProfileInfoByUserId(userId)\n                .then((response) => {\n                    const { data = {} } = response.data || {};\n                    setProfile(data);\n                })\n                .catch(console.log);\n        }\n    }, [userId]);\n\n\n    const { id: essayId, assignmentId, authorId, sourceType, source } =  essay;\n\n    const targetUrl = sourceType === 2 ? source : `https://api.bounswe2019group9.tk/essays/getSourceByEssayId?id=${essayId}`;\n\n    const [editingAnnotation, setEditingAnnotation] = useState(null);\n\n    const [annotations, dispatch] = useReducer((prevState, action) => {\n        switch (action.type) {\n            case 'initialize':\n                return action.data;\n            case 'newAnnotation':\n                setEditingAnnotation(action.data[action.data.length - 1]);\n                return action.data;\n            case 'removeAnnotation':\n                if (editingAnnotation === action.data) {\n                    setEditingAnnotation(null);\n                }\n                return prevState.filter((annotation) => annotation !== action.data);\n            case 'updateAnnotation':\n                if (editingAnnotation === action.data.annotation) {\n                    setEditingAnnotation(null);\n                }\n                return prevState.map((annotation) =>\n                    annotation === action.data.annotation ? action.data.nextAnnotation : annotation\n                );\n            default:\n                return prevState;\n        }\n    }, []);\n\n    useEffect(() => {\n        if (targetUrl) {\n            searchAnnotations(targetUrl)\n                .then((response) => {\n                    const { data = [] } = response.data || {};\n                    let initialAnnotations = (data || [])\n                        .map((x) => JSON.parse(x))\n                        .map(AnnotationDataFactory.fromDataModel);\n                    if (sourceType === 1) {\n                        initialAnnotations = initialAnnotations.map((annotation => {\n                            annotation.tag = (\n                                <TextAnnotation\n                                    annotation={annotation}\n                                    onRemoveAnnotation={handleRemoveAnnotation}\n                                    setEditingAnnotation={setEditingAnnotation}\n                                />\n                            );\n                            return annotation;\n                        }));\n                    }\n                    dispatch({ type: 'initialize', data: initialAnnotations });\n                }).catch(console.log);\n        }\n    }, [targetUrl]);\n\n    const handleSaveAnnotation = (annotation, nextAnnotation) => {\n      const isNew = !annotation.id;\n      let dataModel = nextAnnotation.toDataModel();\n      delete dataModel.id;\n      dataModel = JSON.stringify(dataModel);\n      let request;\n      if (isNew) {\n          request = createAnnotation({annotation: dataModel});\n      } else {\n          request = updateAnnotation({ id: annotation.id, annotation: dataModel });\n      }\n      return request\n          .then((response) => {\n              let { data } = response.data;\n              data = JSON.parse(data);\n              nextAnnotation.setIdFromLink(data.id);\n              if (sourceType === 1) {\n                  nextAnnotation.tag = (\n                      <TextAnnotation\n                          annotation={nextAnnotation}\n                          onRemoveAnnotation={handleRemoveAnnotation}\n                          setEditingAnnotation={setEditingAnnotation}\n                      />\n                  );\n              }\n              dispatch({ type: 'updateAnnotation', data: { annotation, nextAnnotation }});\n          });\n    };\n\n    const handleRemoveAnnotation = (annotation) => {\n      const isNew = !annotation.id;\n      if (isNew) {\n         return dispatch({ type: 'removeAnnotation', data: annotation });\n      } else {\n          deleteAnnotationById(annotation.id)\n              .then((response) => {\n                  dispatch({ type: 'removeAnnotation', data: annotation });\n              }).catch(console.log);\n      }\n    };\n\n    const ChosenAnnotationContainer = sourceType == 2\n        ? ImageAnnotationContainer : sourceType == 1\n        ? TextAnnotationContainer : null;\n\n    return (\n        <div style={styles.container}>\n            { ChosenAnnotationContainer && (\n                <ChosenAnnotationContainer\n                    source={source}\n                    annotations={annotations}\n                    dispatch={dispatch}\n                    user={profile || {}}\n                    targetUrl={targetUrl}\n                    onSaveAnnotation={handleSaveAnnotation}\n                    setEditingAnnotation={setEditingAnnotation}\n                />\n            ) }\n            <AnnotationModal\n                annotation={editingAnnotation}\n                setEditingAnnotation={setEditingAnnotation}\n                onSaveAnnotation={handleSaveAnnotation}\n                onRemoveAnnotation={handleRemoveAnnotation}\n            />\n        </div>\n    )\n};\n\nconst styles = {\n    container: {\n        minWidth: 300\n    }\n};\n\nexport default connect(AnnotationContainer)\n","import { getRequest, postRequest, putRequest } from \"../base\";\n\n/**\n * @function createAnnotation\n * @param data\n * @param extra\n * @returns {Promise<AxiosResponse<T>>}\n *\n * params: {\n *   \"annotation\": \"string\" (do not send id here!)\n * }\n *\n * success response\n * {\n *   \"status\": 200,\n *   \"explanation\": null,\n *   \"data\": \"{ \\\"id\\\": \\\"http://api.bounswe2019group9.tk/annotations?id=21\\\", \\\"dom\\\": \\\"pom\\\" }\"\n * }\n */\nexport const createAnnotation = (data, extras) => postRequest('annotations', data, extras);\n\n/**\n * @function deleteAnnotationById\n * @param annotationId\n * @param extras\n * @returns {Promise<AxiosResponse<T>>}\n *\n *\n * success response\n * {\n *   \"status\": 200,\n * \"explanation\": null,\n * \"data\": 1\n * }\n */\nexport const deleteAnnotationById = (annotationId, extras) => getRequest('annotations/deleteById', { annotationId }, extras);\n\n/**\n * @function searchAnnotations\n * @param targetId\n * @param extras\n * @returns {Promise<AxiosResponse<T>>}\n *\n * success response\n * {\n *   \"status\": 200,\n * \"explanation\": null,\n * \"data\": [\n *     \"{ \\\"id\\\": \\\"http://api.bounswe2019group9.tk/annotations?id=12\\\",'targetId': 'http://example.com/writing1#char=0,10', 'value' : 'Bad Mistake'}\",\n *     \"{ \\\"id\\\": \\\"http://api.bounswe2019group9.tk/annotations?id=13\\\",'targetId': 'http://example.com/writing1#char=0,10', 'value' : 'Bad Mistake'}\"\n * ]\n * }\n */\nexport const searchAnnotations = (targetId, extras) => getRequest('annotations/searchInAnnotations', { targetId }, extras);\n\n/**\n * @function updateAnnotation\n * @param data\n * @param extras\n * @returns {Promise<AxiosResponse<T>>}\n *\n * params: {\n *   \"id\": 0,\n *   \"annotation\": \"string\" (do not send id here!)\n * }\n *\n * success response\n * {\n *  \"status\": 200,\n *  \"explanation\": null,\n *  \"data\": \"{ \\\"id\\\": \\\"http://api.bounswe2019group9.tk/annotations?id=2\\\", \\\"dom\\\": \\\"pop\\\" }\"\n * }\n */\nexport const updateAnnotation = (data, extras) => postRequest('annotations/update', data, extras);","import React, {useEffect, useState} from 'react';\nimport {getEssayById} from \"../../../Api/Essay\";\nimport AnnotationContainer from \"../Annotation\";\n\nconst EssayView = ({ essayId }) => {\n    const [essay, setEssay] = useState();\n    useEffect(() => {\n        if (essayId) {\n            getEssayById(essayId)\n                .then((response) => {\n                    const {data = {}} = response.data || {};\n                    setEssay(data);\n                }).catch(console.log)\n        }\n    }, [essayId]);\n\n    if (!essay) {\n        return null;\n    }\n    return (\n        <AnnotationContainer essay={essay}/>\n    )\n};\n\nexport default EssayView;","import {getRequest} from \"../base\";\n\n/**\n * @function getEssaysByUserId\n * @param data ({ id })\n * @param extras object?\n * @return {Promise<AxiosResponse<T>>}\n * Success Response\n * {\n  \"data\": [\n    {\n      \"assignment\": {\n        \"id\": 0,\n        \"languageId\": 0,\n        \"question\": \"string\"\n      },\n      \"essay\": {\n        \"assignmentId\": 0,\n        \"authorId\": 0,\n        \"id\": 0,\n        \"source\": \"string\",\n        \"sourceType\": 0\n      }\n    }\n  ],\n  \"explanation\": \"string\",\n  \"status\": 0\n}\n */\nexport const getEssaysByUserId = (data, extras) => getRequest('essays/user', data, extras);\n\n/**\n * @function getEssayById\n * @param essayId\n * @param extras\n * @returns {Promise<AxiosResponse<T>>}\n *\n * Success Response\n * {\n *   \"status\": 200,\n *   \"explanation\": null,\n *   \"data\": {\n *     \"id\": 2,\n *     \"assignmentId\": 1,\n *     \"authorId\": 9,\n *     \"sourceType\": 1,\n *     \"source\": \"kjdgkjnkjkgdkjangkjdrngkjdangkjadfn kjdfkjadgkjadhgkjdahfkjadhgkjadfh kjdfkjdhgkjdfhgkjfdhg\"\n *   }\n * }\n */\nexport const getEssayById = (essayId, extras) => getRequest('essays', { id: essayId }, extras);","import React, {useEffect, useState} from 'react';\nimport {connect} from \"../../../Store\";\nimport {Button, Layout, Modal} from \"antd\";\n\nimport EssaysSider from \"./EssaysSider\";\nimport {getEssaysByUserId} from \"../../../Api/Essay\";\nimport RequestReviewModal from \"./RequestReview\";\nimport AnnotationContainer from \"../Annotation\";\nimport EssayView from \"./EssayView\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst Essays = ({ store: { userId } }) => {\n\n  const [essays, setEssays] = useState([]);\n  const [focusEssayId, setFocusEssayId] = useState(null);\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [focusLangId, setFocusLangId] = useState();\n\n  const updateEssays = () => {\n    getEssaysByUserId({ id: userId })\n      .then(res => {\n        const { data = [] } = res.data || [];\n        setEssays(data);\n      }).catch(console.log)\n  };\n\n  useEffect(() => {\n    updateEssays();\n  }, [userId]);\n\n  const menu_essays = essays.map(ess => ({\n    key: ess.essay.id,\n    text: ess.assignment.question,\n  }));\n\n  const handleClick = ({ key }) => {\n    setFocusEssayId(key);\n  };\n\n  useEffect(() => {\n    for (let ess of essays) {\n      if (ess.essay.id === focusEssayId) {\n        setFocusLangId(ess.assignment.languageId);\n      }\n    }\n  }, [focusEssayId]);\n\n  return (\n    <Layout style={{height: \"100%\"}}>\n      <EssaysSider essays={menu_essays} onClick={handleClick} />\n      <Layout>\n        <Content style={styles.content}>\n            <EssayView essayId={focusEssayId} />\n        </Content>\n        <Footer style={styles.footer}>\n          <Button onClick={() => setModalVisible(true)}>Request Review</Button>\n          <RequestReviewModal essayId={focusEssayId} visible={isModalVisible} languageId={focusLangId} onCancel={() => setModalVisible(false)}/>\n        </Footer>\n      </Layout>\n    </Layout>\n  )\n};\n\nconst styles = {\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    overflow: 'auto'\n  },\n  footer: {\n    width: \"100%\",\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n\n}\n\nexport default connect(Essays);","import React, {useEffect, useState} from 'react';\nimport {connect} from \"../../../Store\";\nimport {Button, Layout, Modal} from \"antd\";\n\nimport EssaysSider from \"./EssaysSider\";\nimport EssayView from \"./EssayView\";\nimport {getRequestsByUserId} from \"../../../Api/Request\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst EssayReviews = ({ store: { userId } }) => {\n\n    const [essays, setEssays] = useState([]);\n    const [focusEssayId, setFocusEssayId] = useState(null);\n\n    const updateEssays = () => {\n        getRequestsByUserId(userId)\n            .then(res => {\n                const { data = [] } = res.data || {};\n                setEssays(data);\n            }).catch(console.log)\n    };\n\n    useEffect(() => {\n        updateEssays();\n    }, [userId]);\n\n    const menu_essays = essays.map(ess => ({\n        key: ess.essayId,\n        text: `${ess.question} (${ess.username})`,\n    }));\n\n    const handleClick = ({ key }) => {\n        setFocusEssayId(key);\n    };\n\n    return (\n        <Layout style={{height: \"100%\"}}>\n            <EssaysSider essays={menu_essays} onClick={handleClick} />\n            <Layout>\n                <Content style={styles.content}>\n                    <EssayView essayId={focusEssayId} />\n                </Content>\n            </Layout>\n        </Layout>\n    )\n};\n\nconst styles = {\n    content: {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        overflow: 'auto'\n    },\n    footer: {\n        width: \"100%\",\n        display: \"grid\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n    },\n\n}\n\nexport default connect(EssayReviews);","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Layout } from 'antd';\n\nimport LanguageSelect from './LanguageSelect';\nimport Language from './Language';\nimport Dashboard from './Dashboard';\nimport UserNavbar from './Navbar';\nimport SamplePage from './Sample';\nimport UserProfile from './UserProfile';\nimport Users from './Users';\nimport {ColorsHelper} from '../../Helpers';\nimport Chats from './Chats';\nimport Essays from \"./Essays\";\nimport EssayReviews from \"./Essays/EssayReviews\";\n\nclass UserRoutes extends React.PureComponent {\n  render() {\n    return (\n      <Layout className=\"layout\">\n        <Layout.Header style={styles.header}>\n          <UserNavbar />\n        </Layout.Header>\n        <Layout.Content>\n          <Switch>\n            <Redirect from=\"/(login|register|forgot)\" to=\"/\" />\n            <Route exact path=\"/language-select\" component={LanguageSelect} />\n            <Route exact path=\"/sample\" component={SamplePage} />\n            <Route exact path=\"/home\" component={Dashboard} />\n            <Route exact path=\"/users\" component={Users} />\n            <Route exact path=\"/users/:userId\" component={UserProfile} />\n            <Route exact path=\"/chat\" component={Chats} />\n            <Route exact path=\"/essays\" component={Essays} />\n            <Route exact path=\"/reviews\" component={EssayReviews} />\n            <Route path=\"/:language\" component={Language} />\n            <Redirect to=\"/home\" />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    );\n  }\n}\n\nconst styles = {\n  header: {\n    backgroundColor: ColorsHelper.appColorDark\n  }\n};\n\nexport default UserRoutes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { connect, storeType } from '../Store';\n\nimport GuestRoutes from './Guest';\nimport UserRoutes from './User';\n\nclass Routes extends React.PureComponent {\n  static propTypes = {\n    store: storeType\n  };\n\n  render() {\n    const {store: {token}} = this.props;\n    return (\n      <BrowserRouter>\n        {token ? <UserRoutes/> : <GuestRoutes/>}\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(Routes);\n","import React from 'react';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-chat-elements/dist/main.css';\nimport './Libs/Toaster/toaster';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}